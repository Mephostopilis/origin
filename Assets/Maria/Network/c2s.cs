// Generated by sprotodump. DO NOT EDIT!
// source: ./../tool/c2s.sproto

using System;
using Sproto;
using System.Collections.Generic;

namespace C2sSprotoType { 
	public class ArenaBattleList {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<BattleListElem> _fightlist; // tag 0
			public List<BattleListElem> fightlist {
				get { return _fightlist; }
				set { base.has_field.set_field (0, true); _fightlist = value; }
			}
			public bool HasFightlist {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.fightlist = base.deserialize.read_obj_list<BattleListElem> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.fightlist, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class Arena_OnPrepareNextRole {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private Int64 _errorcode; // tag 1
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 2
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _firstfighter; // tag 3
			public Int64 firstfighter {
				get { return _firstfighter; }
				set { base.has_field.set_field (2, true); _firstfighter = value; }
			}
			public bool HasFirstfighter {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _delay_time; // tag 4
			public Int64 delay_time {
				get { return _delay_time; }
				set { base.has_field.set_field (3, true); _delay_time = value; }
			}
			public bool HasDelay_time {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 1:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 2:
						this.msg = base.deserialize.read_string ();
						break;
					case 3:
						this.firstfighter = base.deserialize.read_integer ();
						break;
					case 4:
						this.delay_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 1);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 2);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.firstfighter, 3);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.delay_time, 4);
				}

				return base.serialize.close ();
			}
		}


	}


	public class BattleListElem : SprotoTypeBase {
		private static int max_field_count = 9;
		
		
		private Int64 _fighterid; // tag 0
		public Int64 fighterid {
			get { return _fighterid; }
			set { base.has_field.set_field (0, true); _fighterid = value; }
		}
		public bool HasFighterid {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _kf_id; // tag 1
		public Int64 kf_id {
			get { return _kf_id; }
			set { base.has_field.set_field (1, true); _kf_id = value; }
		}
		public bool HasKf_id {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _attcktype; // tag 2
		public Int64 attcktype {
			get { return _attcktype; }
			set { base.has_field.set_field (2, true); _attcktype = value; }
		}
		public bool HasAttcktype {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _isdead; // tag 3
		public Int64 isdead {
			get { return _isdead; }
			set { base.has_field.set_field (3, true); _isdead = value; }
		}
		public bool HasIsdead {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _kf_prob; // tag 4
		public Int64 kf_prob {
			get { return _kf_prob; }
			set { base.has_field.set_field (4, true); _kf_prob = value; }
		}
		public bool HasKf_prob {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _attach_effect; // tag 5
		public Int64 attach_effect {
			get { return _attach_effect; }
			set { base.has_field.set_field (5, true); _attach_effect = value; }
		}
		public bool HasAttach_effect {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _kf_type; // tag 6
		public Int64 kf_type {
			get { return _kf_type; }
			set { base.has_field.set_field (6, true); _kf_type = value; }
		}
		public bool HasKf_type {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _attack; // tag 7
		public Int64 attack {
			get { return _attack; }
			set { base.has_field.set_field (7, true); _attack = value; }
		}
		public bool HasAttack {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _random_combo_num; // tag 8
		public Int64 random_combo_num {
			get { return _random_combo_num; }
			set { base.has_field.set_field (8, true); _random_combo_num = value; }
		}
		public bool HasRandom_combo_num {
			get { return base.has_field.has_field (8); }
		}

		public BattleListElem () : base(max_field_count) {}

		public BattleListElem (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.fighterid = base.deserialize.read_integer ();
					break;
				case 1:
					this.kf_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.attcktype = base.deserialize.read_integer ();
					break;
				case 3:
					this.isdead = base.deserialize.read_integer ();
					break;
				case 4:
					this.kf_prob = base.deserialize.read_integer ();
					break;
				case 5:
					this.attach_effect = base.deserialize.read_integer ();
					break;
				case 6:
					this.kf_type = base.deserialize.read_integer ();
					break;
				case 7:
					this.attack = base.deserialize.read_integer ();
					break;
				case 8:
					this.random_combo_num = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.fighterid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.kf_id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.attcktype, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.isdead, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.kf_prob, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.attach_effect, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.kf_type, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.attack, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.random_combo_num, 8);
			}

			return base.serialize.close ();
		}
	}


	public class BeginArenaCoreFight {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _monsterid; // tag 0
			public Int64 monsterid {
				get { return _monsterid; }
				set { base.has_field.set_field (0, true); _monsterid = value; }
			}
			public bool HasMonsterid {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.monsterid = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.monsterid, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _firstfighter; // tag 1
			public Int64 firstfighter {
				get { return _firstfighter; }
				set { base.has_field.set_field (1, true); _firstfighter = value; }
			}
			public bool HasFirstfighter {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _delay_time; // tag 2
			public Int64 delay_time {
				get { return _delay_time; }
				set { base.has_field.set_field (2, true); _delay_time = value; }
			}
			public bool HasDelay_time {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.firstfighter = base.deserialize.read_integer ();
						break;
					case 2:
						this.delay_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.firstfighter, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.delay_time, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class BeginGUQNQIACoreFight {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _monsterid; // tag 0
			public Int64 monsterid {
				get { return _monsterid; }
				set { base.has_field.set_field (0, true); _monsterid = value; }
			}
			public bool HasMonsterid {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.monsterid = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.monsterid, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _firstfighter; // tag 1
			public Int64 firstfighter {
				get { return _firstfighter; }
				set { base.has_field.set_field (1, true); _firstfighter = value; }
			}
			public bool HasFirstfighter {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _delay_time; // tag 2
			public Int64 delay_time {
				get { return _delay_time; }
				set { base.has_field.set_field (2, true); _delay_time = value; }
			}
			public bool HasDelay_time {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.firstfighter = base.deserialize.read_integer ();
						break;
					case 2:
						this.delay_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.firstfighter, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.delay_time, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GuanQiaBattleList {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<BattleListElem> _fightlist; // tag 0
			public List<BattleListElem> fightlist {
				get { return _fightlist; }
				set { base.has_field.set_field (0, true); _fightlist = value; }
			}
			public bool HasFightlist {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.fightlist = base.deserialize.read_obj_list<BattleListElem> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.fightlist, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class OnReEnterCoreFight {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _loserid; // tag 2
			public Int64 loserid {
				get { return _loserid; }
				set { base.has_field.set_field (2, true); _loserid = value; }
			}
			public bool HasLoserid {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.loserid = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.loserid, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class TMP_BeginGUQNQIACoreFight {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _monsterid; // tag 0
			public Int64 monsterid {
				get { return _monsterid; }
				set { base.has_field.set_field (0, true); _monsterid = value; }
			}
			public bool HasMonsterid {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.monsterid = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.monsterid, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _firstfighter; // tag 2
			public Int64 firstfighter {
				get { return _firstfighter; }
				set { base.has_field.set_field (2, true); _firstfighter = value; }
			}
			public bool HasFirstfighter {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _kf_id; // tag 3
			public Int64 kf_id {
				get { return _kf_id; }
				set { base.has_field.set_field (3, true); _kf_id = value; }
			}
			public bool HasKf_id {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _delay_time; // tag 4
			public Int64 delay_time {
				get { return _delay_time; }
				set { base.has_field.set_field (4, true); _delay_time = value; }
			}
			public bool HasDelay_time {
				get { return base.has_field.has_field (4); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.firstfighter = base.deserialize.read_integer ();
						break;
					case 3:
						this.kf_id = base.deserialize.read_integer ();
						break;
					case 4:
						this.delay_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.firstfighter, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.kf_id, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.delay_time, 4);
				}

				return base.serialize.close ();
			}
		}


	}


	public class TMP_GuanQiaBattleList {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private BattleListElem _fightinfo; // tag 0
			public BattleListElem fightinfo {
				get { return _fightinfo; }
				set { base.has_field.set_field (0, true); _fightinfo = value; }
			}
			public bool HasFightinfo {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.fightinfo = base.deserialize.read_obj<BattleListElem> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.fightinfo, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 7;
			
			
			private Int64 _errorcode; // tag 1
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 2
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _totalattack; // tag 3
			public Int64 totalattack {
				get { return _totalattack; }
				set { base.has_field.set_field (2, true); _totalattack = value; }
			}
			public bool HasTotalattack {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _effect; // tag 4
			public Int64 effect {
				get { return _effect; }
				set { base.has_field.set_field (3, true); _effect = value; }
			}
			public bool HasEffect {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _kf_id; // tag 5
			public Int64 kf_id {
				get { return _kf_id; }
				set { base.has_field.set_field (4, true); _kf_id = value; }
			}
			public bool HasKf_id {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _loser; // tag 6
			public Int64 loser {
				get { return _loser; }
				set { base.has_field.set_field (5, true); _loser = value; }
			}
			public bool HasLoser {
				get { return base.has_field.has_field (5); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 1:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 2:
						this.msg = base.deserialize.read_string ();
						break;
					case 3:
						this.totalattack = base.deserialize.read_integer ();
						break;
					case 4:
						this.effect = base.deserialize.read_integer ();
						break;
					case 5:
						this.kf_id = base.deserialize.read_integer ();
						break;
					case 6:
						this.loser = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 1);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 2);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.totalattack, 3);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.effect, 4);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.kf_id, 5);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.loser, 6);
				}

				return base.serialize.close ();
			}
		}


	}


	public class achi : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private Int64 _csv_id; // tag 0
		public Int64 csv_id {
			get { return _csv_id; }
			set { base.has_field.set_field (0, true); _csv_id = value; }
		}
		public bool HasCsv_id {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _finished; // tag 1
		public Int64 finished {
			get { return _finished; }
			set { base.has_field.set_field (1, true); _finished = value; }
		}
		public bool HasFinished {
			get { return base.has_field.has_field (1); }
		}

		private bool _reward_collected; // tag 2
		public bool reward_collected {
			get { return _reward_collected; }
			set { base.has_field.set_field (2, true); _reward_collected = value; }
		}
		public bool HasReward_collected {
			get { return base.has_field.has_field (2); }
		}

		private bool _is_unlock; // tag 3
		public bool is_unlock {
			get { return _is_unlock; }
			set { base.has_field.set_field (3, true); _is_unlock = value; }
		}
		public bool HasIs_unlock {
			get { return base.has_field.has_field (3); }
		}

		public achi () : base(max_field_count) {}

		public achi (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.csv_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.finished = base.deserialize.read_integer ();
					break;
				case 2:
					this.reward_collected = base.deserialize.read_boolean ();
					break;
				case 3:
					this.is_unlock = base.deserialize.read_boolean ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.csv_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.finished, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_boolean (this.reward_collected, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_boolean (this.is_unlock, 3);
			}

			return base.serialize.close ();
		}
	}


	public class achievement {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<achi> _achis; // tag 2
			public List<achi> achis {
				get { return _achis; }
				set { base.has_field.set_field (2, true); _achis = value; }
			}
			public bool HasAchis {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.achis = base.deserialize.read_obj_list<achi> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.achis, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class achievement_reward_collect {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _csv_id; // tag 0
			public Int64 csv_id {
				get { return _csv_id; }
				set { base.has_field.set_field (0, true); _csv_id = value; }
			}
			public bool HasCsv_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.csv_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.csv_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private achi _next; // tag 2
			public achi next {
				get { return _next; }
				set { base.has_field.set_field (2, true); _next = value; }
			}
			public bool HasNext {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.next = base.deserialize.read_obj<achi> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.next, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class app_backgroud {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class app_resume {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class applied_list {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (0, true); _ok = value; }
			}
			public bool HasOk {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _errorcode; // tag 1
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (1, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (1); }
			}

			private string _msg; // tag 2
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (2, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (2); }
			}

			private List<subuser> _friendlist; // tag 3
			public List<subuser> friendlist {
				get { return _friendlist; }
				set { base.has_field.set_field (3, true); _friendlist = value; }
			}
			public bool HasFriendlist {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ok = base.deserialize.read_boolean ();
						break;
					case 1:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 2:
						this.msg = base.deserialize.read_string ();
						break;
					case 3:
						this.friendlist = base.deserialize.read_obj_list<subuser> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ok, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.errorcode, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.msg, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.friendlist, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class apply : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _signtime; // tag 0
		public Int64 signtime {
			get { return _signtime; }
			set { base.has_field.set_field (0, true); _signtime = value; }
		}
		public bool HasSigntime {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _friendid; // tag 1
		public Int64 friendid {
			get { return _friendid; }
			set { base.has_field.set_field (1, true); _friendid = value; }
		}
		public bool HasFriendid {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _type; // tag 2
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (2, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (2); }
		}

		public apply () : base(max_field_count) {}

		public apply (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.signtime = base.deserialize.read_integer ();
					break;
				case 1:
					this.friendid = base.deserialize.read_integer ();
					break;
				case 2:
					this.type = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.signtime, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.friendid, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.type, 2);
			}

			return base.serialize.close ();
		}
	}


	public class applydraw {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _drawtype; // tag 0
			public Int64 drawtype {
				get { return _drawtype; }
				set { base.has_field.set_field (0, true); _drawtype = value; }
			}
			public bool HasDrawtype {
				get { return base.has_field.has_field (0); }
			}

			private bool _iffree; // tag 1
			public bool iffree {
				get { return _iffree; }
				set { base.has_field.set_field (1, true); _iffree = value; }
			}
			public bool HasIffree {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.drawtype = base.deserialize.read_integer ();
						break;
					case 1:
						this.iffree = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.drawtype, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_boolean (this.iffree, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<drawrewardlist> _list; // tag 2
			public List<drawrewardlist> list {
				get { return _list; }
				set { base.has_field.set_field (2, true); _list = value; }
			}
			public bool HasList {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _lefttime; // tag 3
			public Int64 lefttime {
				get { return _lefttime; }
				set { base.has_field.set_field (3, true); _lefttime = value; }
			}
			public bool HasLefttime {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.list = base.deserialize.read_obj_list<drawrewardlist> ();
						break;
					case 3:
						this.lefttime = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.list, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.lefttime, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class applyfriend {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<friendidlist> _friendlist; // tag 0
			public List<friendidlist> friendlist {
				get { return _friendlist; }
				set { base.has_field.set_field (0, true); _friendlist = value; }
			}
			public bool HasFriendlist {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.friendlist = base.deserialize.read_obj_list<friendidlist> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.friendlist, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ara_choose_role {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<Int64> _bat_roleid; // tag 0
			public List<Int64> bat_roleid {
				get { return _bat_roleid; }
				set { base.has_field.set_field (0, true); _bat_roleid = value; }
			}
			public bool HasBat_roleid {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.bat_roleid = base.deserialize.read_integer_list ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.bat_roleid, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ara_choose_role_enter {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _enemy_id; // tag 1
			public Int64 enemy_id {
				get { return _enemy_id; }
				set { base.has_field.set_field (0, true); _enemy_id = value; }
			}
			public bool HasEnemy_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 1:
						this.enemy_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.enemy_id, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<Int64> _bat_roleid; // tag 2
			public List<Int64> bat_roleid {
				get { return _bat_roleid; }
				set { base.has_field.set_field (2, true); _bat_roleid = value; }
			}
			public bool HasBat_roleid {
				get { return base.has_field.has_field (2); }
			}

			private enemy _e; // tag 3
			public enemy e {
				get { return _e; }
				set { base.has_field.set_field (3, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.bat_roleid = base.deserialize.read_integer_list ();
						break;
					case 3:
						this.e = base.deserialize.read_obj<enemy> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.bat_roleid, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.e, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ara_clg_tms_purchase {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _ara_clg_tms; // tag 2
			public Int64 ara_clg_tms {
				get { return _ara_clg_tms; }
				set { base.has_field.set_field (2, true); _ara_clg_tms = value; }
			}
			public bool HasAra_clg_tms {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.ara_clg_tms = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.ara_clg_tms, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ara_convert_pts {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _pts; // tag 0
			public Int64 pts {
				get { return _pts; }
				set { base.has_field.set_field (0, true); _pts = value; }
			}
			public bool HasPts {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.pts = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.pts, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<prop> _props; // tag 2
			public List<prop> props {
				get { return _props; }
				set { base.has_field.set_field (2, true); _props = value; }
			}
			public bool HasProps {
				get { return base.has_field.has_field (2); }
			}

			private List<integral_reward> _cl; // tag 3
			public List<integral_reward> cl {
				get { return _cl; }
				set { base.has_field.set_field (3, true); _cl = value; }
			}
			public bool HasCl {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.props = base.deserialize.read_obj_list<prop> ();
						break;
					case 3:
						this.cl = base.deserialize.read_obj_list<integral_reward> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.props, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.cl, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ara_enter {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 17;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<suser> _ara_rmd_list; // tag 2
			public List<suser> ara_rmd_list {
				get { return _ara_rmd_list; }
				set { base.has_field.set_field (2, true); _ara_rmd_list = value; }
			}
			public bool HasAra_rmd_list {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _ara_win_tms; // tag 3
			public Int64 ara_win_tms {
				get { return _ara_win_tms; }
				set { base.has_field.set_field (3, true); _ara_win_tms = value; }
			}
			public bool HasAra_win_tms {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _ara_lose_tms; // tag 4
			public Int64 ara_lose_tms {
				get { return _ara_lose_tms; }
				set { base.has_field.set_field (4, true); _ara_lose_tms = value; }
			}
			public bool HasAra_lose_tms {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _ara_tie_tms; // tag 5
			public Int64 ara_tie_tms {
				get { return _ara_tie_tms; }
				set { base.has_field.set_field (5, true); _ara_tie_tms = value; }
			}
			public bool HasAra_tie_tms {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _ara_integral; // tag 6
			public Int64 ara_integral {
				get { return _ara_integral; }
				set { base.has_field.set_field (6, true); _ara_integral = value; }
			}
			public bool HasAra_integral {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _ara_clg_tms; // tag 7
			public Int64 ara_clg_tms {
				get { return _ara_clg_tms; }
				set { base.has_field.set_field (7, true); _ara_clg_tms = value; }
			}
			public bool HasAra_clg_tms {
				get { return base.has_field.has_field (7); }
			}

			private Int64 _ara_clg_cost_tms; // tag 8
			public Int64 ara_clg_cost_tms {
				get { return _ara_clg_cost_tms; }
				set { base.has_field.set_field (8, true); _ara_clg_cost_tms = value; }
			}
			public bool HasAra_clg_cost_tms {
				get { return base.has_field.has_field (8); }
			}

			private prop _ara_clg_cost_tms_cost; // tag 9
			public prop ara_clg_cost_tms_cost {
				get { return _ara_clg_cost_tms_cost; }
				set { base.has_field.set_field (9, true); _ara_clg_cost_tms_cost = value; }
			}
			public bool HasAra_clg_cost_tms_cost {
				get { return base.has_field.has_field (9); }
			}

			private Int64 _ara_rfh_tms; // tag 10
			public Int64 ara_rfh_tms {
				get { return _ara_rfh_tms; }
				set { base.has_field.set_field (10, true); _ara_rfh_tms = value; }
			}
			public bool HasAra_rfh_tms {
				get { return base.has_field.has_field (10); }
			}

			private Int64 _ara_rfh_cost_tms; // tag 11
			public Int64 ara_rfh_cost_tms {
				get { return _ara_rfh_cost_tms; }
				set { base.has_field.set_field (11, true); _ara_rfh_cost_tms = value; }
			}
			public bool HasAra_rfh_cost_tms {
				get { return base.has_field.has_field (11); }
			}

			private prop _ara_rfh_cost_tms_cost; // tag 12
			public prop ara_rfh_cost_tms_cost {
				get { return _ara_rfh_cost_tms_cost; }
				set { base.has_field.set_field (12, true); _ara_rfh_cost_tms_cost = value; }
			}
			public bool HasAra_rfh_cost_tms_cost {
				get { return base.has_field.has_field (12); }
			}

			private Int64 _ara_rfh_cd; // tag 13
			public Int64 ara_rfh_cd {
				get { return _ara_rfh_cd; }
				set { base.has_field.set_field (13, true); _ara_rfh_cd = value; }
			}
			public bool HasAra_rfh_cd {
				get { return base.has_field.has_field (13); }
			}

			private prop _ara_rfh_cd_cost; // tag 14
			public prop ara_rfh_cd_cost {
				get { return _ara_rfh_cd_cost; }
				set { base.has_field.set_field (14, true); _ara_rfh_cd_cost = value; }
			}
			public bool HasAra_rfh_cd_cost {
				get { return base.has_field.has_field (14); }
			}

			private List<integral_reward> _cl; // tag 15
			public List<integral_reward> cl {
				get { return _cl; }
				set { base.has_field.set_field (15, true); _cl = value; }
			}
			public bool HasCl {
				get { return base.has_field.has_field (15); }
			}

			private List<rnk_reward> _rl; // tag 16
			public List<rnk_reward> rl {
				get { return _rl; }
				set { base.has_field.set_field (16, true); _rl = value; }
			}
			public bool HasRl {
				get { return base.has_field.has_field (16); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.ara_rmd_list = base.deserialize.read_obj_list<suser> ();
						break;
					case 3:
						this.ara_win_tms = base.deserialize.read_integer ();
						break;
					case 4:
						this.ara_lose_tms = base.deserialize.read_integer ();
						break;
					case 5:
						this.ara_tie_tms = base.deserialize.read_integer ();
						break;
					case 6:
						this.ara_integral = base.deserialize.read_integer ();
						break;
					case 7:
						this.ara_clg_tms = base.deserialize.read_integer ();
						break;
					case 8:
						this.ara_clg_cost_tms = base.deserialize.read_integer ();
						break;
					case 9:
						this.ara_clg_cost_tms_cost = base.deserialize.read_obj<prop> ();
						break;
					case 10:
						this.ara_rfh_tms = base.deserialize.read_integer ();
						break;
					case 11:
						this.ara_rfh_cost_tms = base.deserialize.read_integer ();
						break;
					case 12:
						this.ara_rfh_cost_tms_cost = base.deserialize.read_obj<prop> ();
						break;
					case 13:
						this.ara_rfh_cd = base.deserialize.read_integer ();
						break;
					case 14:
						this.ara_rfh_cd_cost = base.deserialize.read_obj<prop> ();
						break;
					case 15:
						this.cl = base.deserialize.read_obj_list<integral_reward> ();
						break;
					case 16:
						this.rl = base.deserialize.read_obj_list<rnk_reward> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.ara_rmd_list, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.ara_win_tms, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.ara_lose_tms, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.ara_tie_tms, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.ara_integral, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.ara_clg_tms, 7);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_integer (this.ara_clg_cost_tms, 8);
				}

				if (base.has_field.has_field (9)) {
					base.serialize.write_obj (this.ara_clg_cost_tms_cost, 9);
				}

				if (base.has_field.has_field (10)) {
					base.serialize.write_integer (this.ara_rfh_tms, 10);
				}

				if (base.has_field.has_field (11)) {
					base.serialize.write_integer (this.ara_rfh_cost_tms, 11);
				}

				if (base.has_field.has_field (12)) {
					base.serialize.write_obj (this.ara_rfh_cost_tms_cost, 12);
				}

				if (base.has_field.has_field (13)) {
					base.serialize.write_integer (this.ara_rfh_cd, 13);
				}

				if (base.has_field.has_field (14)) {
					base.serialize.write_obj (this.ara_rfh_cd_cost, 14);
				}

				if (base.has_field.has_field (15)) {
					base.serialize.write_obj (this.cl, 15);
				}

				if (base.has_field.has_field (16)) {
					base.serialize.write_obj (this.rl, 16);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ara_exit {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ara_lp {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<suser> _lp; // tag 2
			public List<suser> lp {
				get { return _lp; }
				set { base.has_field.set_field (2, true); _lp = value; }
			}
			public bool HasLp {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.lp = base.deserialize.read_obj_list<suser> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.lp, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ara_rfh {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<suser> _ara_rmd_list; // tag 2
			public List<suser> ara_rmd_list {
				get { return _ara_rmd_list; }
				set { base.has_field.set_field (2, true); _ara_rmd_list = value; }
			}
			public bool HasAra_rmd_list {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _ara_rfh_cd; // tag 3
			public Int64 ara_rfh_cd {
				get { return _ara_rfh_cd; }
				set { base.has_field.set_field (3, true); _ara_rfh_cd = value; }
			}
			public bool HasAra_rfh_cd {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.ara_rmd_list = base.deserialize.read_obj_list<suser> ();
						break;
					case 3:
						this.ara_rfh_cd = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.ara_rmd_list, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.ara_rfh_cd, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ara_rnk_reward_collected {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<prop> _props; // tag 2
			public List<prop> props {
				get { return _props; }
				set { base.has_field.set_field (2, true); _props = value; }
			}
			public bool HasProps {
				get { return base.has_field.has_field (2); }
			}

			private List<rnk_reward> _rl; // tag 3
			public List<rnk_reward> rl {
				get { return _rl; }
				set { base.has_field.set_field (3, true); _rl = value; }
			}
			public bool HasRl {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.props = base.deserialize.read_obj_list<prop> ();
						break;
					case 3:
						this.rl = base.deserialize.read_obj_list<rnk_reward> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.props, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.rl, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ara_worship {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<Int64> _uids; // tag 0
			public List<Int64> uids {
				get { return _uids; }
				set { base.has_field.set_field (0, true); _uids = value; }
			}
			public bool HasUids {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.uids = base.deserialize.read_integer_list ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.uids, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<suser> _ara_rmd_list; // tag 2
			public List<suser> ara_rmd_list {
				get { return _ara_rmd_list; }
				set { base.has_field.set_field (2, true); _ara_rmd_list = value; }
			}
			public bool HasAra_rmd_list {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.ara_rmd_list = base.deserialize.read_obj_list<suser> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.ara_rmd_list, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class attach : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _itemsn; // tag 0
		public Int64 itemsn {
			get { return _itemsn; }
			set { base.has_field.set_field (0, true); _itemsn = value; }
		}
		public bool HasItemsn {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _itemnum; // tag 1
		public Int64 itemnum {
			get { return _itemnum; }
			set { base.has_field.set_field (1, true); _itemnum = value; }
		}
		public bool HasItemnum {
			get { return base.has_field.has_field (1); }
		}

		public attach () : base(max_field_count) {}

		public attach (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.itemsn = base.deserialize.read_integer ();
					break;
				case 1:
					this.itemnum = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.itemsn, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.itemnum, 1);
			}

			return base.serialize.close ();
		}
	}


	public class c_gold {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private bool _ifc_gold; // tag 0
			public bool ifc_gold {
				get { return _ifc_gold; }
				set { base.has_field.set_field (0, true); _ifc_gold = value; }
			}
			public bool HasIfc_gold {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _lefttime; // tag 1
			public Int64 lefttime {
				get { return _lefttime; }
				set { base.has_field.set_field (1, true); _lefttime = value; }
			}
			public bool HasLefttime {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _c_gold_level; // tag 2
			public Int64 c_gold_level {
				get { return _c_gold_level; }
				set { base.has_field.set_field (2, true); _c_gold_level = value; }
			}
			public bool HasC_gold_level {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ifc_gold = base.deserialize.read_boolean ();
						break;
					case 1:
						this.lefttime = base.deserialize.read_integer ();
						break;
					case 2:
						this.c_gold_level = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ifc_gold, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.lefttime, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.c_gold_level, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class c_gold_once {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _daily_type; // tag 0
			public Int64 daily_type {
				get { return _daily_type; }
				set { base.has_field.set_field (0, true); _daily_type = value; }
			}
			public bool HasDaily_type {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _c_gold_type; // tag 1
			public Int64 c_gold_type {
				get { return _c_gold_type; }
				set { base.has_field.set_field (1, true); _c_gold_type = value; }
			}
			public bool HasC_gold_type {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _c_gold_level; // tag 2
			public Int64 c_gold_level {
				get { return _c_gold_level; }
				set { base.has_field.set_field (2, true); _c_gold_level = value; }
			}
			public bool HasC_gold_level {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.daily_type = base.deserialize.read_integer ();
						break;
					case 1:
						this.c_gold_type = base.deserialize.read_integer ();
						break;
					case 2:
						this.c_gold_level = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.daily_type, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.c_gold_type, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.c_gold_level, 2);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _lefttime; // tag 2
			public Int64 lefttime {
				get { return _lefttime; }
				set { base.has_field.set_field (2, true); _lefttime = value; }
			}
			public bool HasLefttime {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.lefttime = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.lefttime, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class checkin {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _totalamount; // tag 0
			public Int64 totalamount {
				get { return _totalamount; }
				set { base.has_field.set_field (0, true); _totalamount = value; }
			}
			public bool HasTotalamount {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _monthamount; // tag 1
			public Int64 monthamount {
				get { return _monthamount; }
				set { base.has_field.set_field (1, true); _monthamount = value; }
			}
			public bool HasMonthamount {
				get { return base.has_field.has_field (1); }
			}

			private bool _ifcheckin_t; // tag 2
			public bool ifcheckin_t {
				get { return _ifcheckin_t; }
				set { base.has_field.set_field (2, true); _ifcheckin_t = value; }
			}
			public bool HasIfcheckin_t {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _rewardnum; // tag 3
			public Int64 rewardnum {
				get { return _rewardnum; }
				set { base.has_field.set_field (3, true); _rewardnum = value; }
			}
			public bool HasRewardnum {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.totalamount = base.deserialize.read_integer ();
						break;
					case 1:
						this.monthamount = base.deserialize.read_integer ();
						break;
					case 2:
						this.ifcheckin_t = base.deserialize.read_boolean ();
						break;
					case 3:
						this.rewardnum = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.totalamount, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.monthamount, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_boolean (this.ifcheckin_t, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.rewardnum, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class checkin_aday {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class checkin_reward {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _totalamount; // tag 0
			public Int64 totalamount {
				get { return _totalamount; }
				set { base.has_field.set_field (0, true); _totalamount = value; }
			}
			public bool HasTotalamount {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _rewardnum; // tag 1
			public Int64 rewardnum {
				get { return _rewardnum; }
				set { base.has_field.set_field (1, true); _rewardnum = value; }
			}
			public bool HasRewardnum {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.totalamount = base.deserialize.read_integer ();
						break;
					case 1:
						this.rewardnum = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.totalamount, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.rewardnum, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class checkpoint_battle_enter {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _chapter; // tag 0
			public Int64 chapter {
				get { return _chapter; }
				set { base.has_field.set_field (0, true); _chapter = value; }
			}
			public bool HasChapter {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _type; // tag 1
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (1, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _checkpoint; // tag 2
			public Int64 checkpoint {
				get { return _checkpoint; }
				set { base.has_field.set_field (2, true); _checkpoint = value; }
			}
			public bool HasCheckpoint {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _csv_id; // tag 3
			public Int64 csv_id {
				get { return _csv_id; }
				set { base.has_field.set_field (3, true); _csv_id = value; }
			}
			public bool HasCsv_id {
				get { return base.has_field.has_field (3); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.chapter = base.deserialize.read_integer ();
						break;
					case 1:
						this.type = base.deserialize.read_integer ();
						break;
					case 2:
						this.checkpoint = base.deserialize.read_integer ();
						break;
					case 3:
						this.csv_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.chapter, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.type, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.checkpoint, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.csv_id, 3);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class checkpoint_battle_exit {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private Int64 _chapter; // tag 0
			public Int64 chapter {
				get { return _chapter; }
				set { base.has_field.set_field (0, true); _chapter = value; }
			}
			public bool HasChapter {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _type; // tag 1
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (1, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _checkpoint; // tag 2
			public Int64 checkpoint {
				get { return _checkpoint; }
				set { base.has_field.set_field (2, true); _checkpoint = value; }
			}
			public bool HasCheckpoint {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _csv_id; // tag 3
			public Int64 csv_id {
				get { return _csv_id; }
				set { base.has_field.set_field (3, true); _csv_id = value; }
			}
			public bool HasCsv_id {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _result; // tag 4
			public Int64 result {
				get { return _result; }
				set { base.has_field.set_field (4, true); _result = value; }
			}
			public bool HasResult {
				get { return base.has_field.has_field (4); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.chapter = base.deserialize.read_integer ();
						break;
					case 1:
						this.type = base.deserialize.read_integer ();
						break;
					case 2:
						this.checkpoint = base.deserialize.read_integer ();
						break;
					case 3:
						this.csv_id = base.deserialize.read_integer ();
						break;
					case 4:
						this.result = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.chapter, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.type, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.checkpoint, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.csv_id, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.result, 4);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<prop> _reward; // tag 2
			public List<prop> reward {
				get { return _reward; }
				set { base.has_field.set_field (2, true); _reward = value; }
			}
			public bool HasReward {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.reward = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.reward, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class checkpoint_battle_play {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _chapter; // tag 0
			public Int64 chapter {
				get { return _chapter; }
				set { base.has_field.set_field (0, true); _chapter = value; }
			}
			public bool HasChapter {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _type; // tag 1
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (1, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _checkpoint; // tag 2
			public Int64 checkpoint {
				get { return _checkpoint; }
				set { base.has_field.set_field (2, true); _checkpoint = value; }
			}
			public bool HasCheckpoint {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.chapter = base.deserialize.read_integer ();
						break;
					case 1:
						this.type = base.deserialize.read_integer ();
						break;
					case 2:
						this.checkpoint = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.chapter, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.type, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.checkpoint, 2);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _cd; // tag 2
			public Int64 cd {
				get { return _cd; }
				set { base.has_field.set_field (2, true); _cd = value; }
			}
			public bool HasCd {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.cd = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.cd, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class checkpoint_chapter : SprotoTypeBase {
		private static int max_field_count = 4;
		
		public class response : SprotoTypeBase {
			private static int max_field_count = 9;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<checkpoint_chapter> _l; // tag 2
			public List<checkpoint_chapter> l {
				get { return _l; }
				set { base.has_field.set_field (2, true); _l = value; }
			}
			public bool HasL {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _chapter; // tag 3
			public Int64 chapter {
				get { return _chapter; }
				set { base.has_field.set_field (3, true); _chapter = value; }
			}
			public bool HasChapter {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _type; // tag 4
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (4, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _checkpoint; // tag 5
			public Int64 checkpoint {
				get { return _checkpoint; }
				set { base.has_field.set_field (5, true); _checkpoint = value; }
			}
			public bool HasCheckpoint {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _drop_id1; // tag 6
			public Int64 drop_id1 {
				get { return _drop_id1; }
				set { base.has_field.set_field (6, true); _drop_id1 = value; }
			}
			public bool HasDrop_id1 {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _drop_id2; // tag 7
			public Int64 drop_id2 {
				get { return _drop_id2; }
				set { base.has_field.set_field (7, true); _drop_id2 = value; }
			}
			public bool HasDrop_id2 {
				get { return base.has_field.has_field (7); }
			}

			private Int64 _drop_id3; // tag 8
			public Int64 drop_id3 {
				get { return _drop_id3; }
				set { base.has_field.set_field (8, true); _drop_id3 = value; }
			}
			public bool HasDrop_id3 {
				get { return base.has_field.has_field (8); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.l = base.deserialize.read_obj_list<checkpoint_chapter> ();
						break;
					case 3:
						this.chapter = base.deserialize.read_integer ();
						break;
					case 4:
						this.type = base.deserialize.read_integer ();
						break;
					case 5:
						this.checkpoint = base.deserialize.read_integer ();
						break;
					case 6:
						this.drop_id1 = base.deserialize.read_integer ();
						break;
					case 7:
						this.drop_id2 = base.deserialize.read_integer ();
						break;
					case 8:
						this.drop_id3 = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.l, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.chapter, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.type, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.checkpoint, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.drop_id1, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.drop_id2, 7);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_integer (this.drop_id3, 8);
				}

				return base.serialize.close ();
			}
		}


		
		private Int64 _chapter; // tag 0
		public Int64 chapter {
			get { return _chapter; }
			set { base.has_field.set_field (0, true); _chapter = value; }
		}
		public bool HasChapter {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _chapter_type0; // tag 1
		public Int64 chapter_type0 {
			get { return _chapter_type0; }
			set { base.has_field.set_field (1, true); _chapter_type0 = value; }
		}
		public bool HasChapter_type0 {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _chapter_type1; // tag 2
		public Int64 chapter_type1 {
			get { return _chapter_type1; }
			set { base.has_field.set_field (2, true); _chapter_type1 = value; }
		}
		public bool HasChapter_type1 {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _chapter_type2; // tag 3
		public Int64 chapter_type2 {
			get { return _chapter_type2; }
			set { base.has_field.set_field (3, true); _chapter_type2 = value; }
		}
		public bool HasChapter_type2 {
			get { return base.has_field.has_field (3); }
		}

		public checkpoint_chapter () : base(max_field_count) {}

		public checkpoint_chapter (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.chapter = base.deserialize.read_integer ();
					break;
				case 1:
					this.chapter_type0 = base.deserialize.read_integer ();
					break;
				case 2:
					this.chapter_type1 = base.deserialize.read_integer ();
					break;
				case 3:
					this.chapter_type2 = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.chapter, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.chapter_type0, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.chapter_type1, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.chapter_type2, 3);
			}

			return base.serialize.close ();
		}
	}


	public class checkpoint_drop_collect {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<Int64> _drop_slot; // tag 0
			public List<Int64> drop_slot {
				get { return _drop_slot; }
				set { base.has_field.set_field (0, true); _drop_slot = value; }
			}
			public bool HasDrop_slot {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.drop_slot = base.deserialize.read_integer_list ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.drop_slot, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class checkpoint_exit {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class checkpoint_hanging {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<prop> _props; // tag 2
			public List<prop> props {
				get { return _props; }
				set { base.has_field.set_field (2, true); _props = value; }
			}
			public bool HasProps {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.props = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.props, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class checkpoint_hanging_choose {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _chapter; // tag 0
			public Int64 chapter {
				get { return _chapter; }
				set { base.has_field.set_field (0, true); _chapter = value; }
			}
			public bool HasChapter {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _type; // tag 1
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (1, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _checkpoint; // tag 2
			public Int64 checkpoint {
				get { return _checkpoint; }
				set { base.has_field.set_field (2, true); _checkpoint = value; }
			}
			public bool HasCheckpoint {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _csv_id; // tag 3
			public Int64 csv_id {
				get { return _csv_id; }
				set { base.has_field.set_field (3, true); _csv_id = value; }
			}
			public bool HasCsv_id {
				get { return base.has_field.has_field (3); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.chapter = base.deserialize.read_integer ();
						break;
					case 1:
						this.type = base.deserialize.read_integer ();
						break;
					case 2:
						this.checkpoint = base.deserialize.read_integer ();
						break;
					case 3:
						this.csv_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.chapter, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.type, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.checkpoint, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.csv_id, 3);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private bool _passed; // tag 2
			public bool passed {
				get { return _passed; }
				set { base.has_field.set_field (2, true); _passed = value; }
			}
			public bool HasPassed {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _cd; // tag 3
			public Int64 cd {
				get { return _cd; }
				set { base.has_field.set_field (3, true); _cd = value; }
			}
			public bool HasCd {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.passed = base.deserialize.read_boolean ();
						break;
					case 3:
						this.cd = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_boolean (this.passed, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.cd, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class choose_role {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _role_id; // tag 0
			public Int64 role_id {
				get { return _role_id; }
				set { base.has_field.set_field (0, true); _role_id = value; }
			}
			public bool HasRole_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.role_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.role_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class deletefriend {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _signtime; // tag 0
			public Int64 signtime {
				get { return _signtime; }
				set { base.has_field.set_field (0, true); _signtime = value; }
			}
			public bool HasSigntime {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _friendid; // tag 1
			public Int64 friendid {
				get { return _friendid; }
				set { base.has_field.set_field (1, true); _friendid = value; }
			}
			public bool HasFriendid {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _type; // tag 2
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (2, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.signtime = base.deserialize.read_integer ();
						break;
					case 1:
						this.friendid = base.deserialize.read_integer ();
						break;
					case 2:
						this.type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.signtime, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.friendid, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.type, 2);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class draw {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<drawlist> _list; // tag 0
			public List<drawlist> list {
				get { return _list; }
				set { base.has_field.set_field (0, true); _list = value; }
			}
			public bool HasList {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.list = base.deserialize.read_obj_list<drawlist> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.list, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class drawlist : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _drawtype; // tag 0
		public Int64 drawtype {
			get { return _drawtype; }
			set { base.has_field.set_field (0, true); _drawtype = value; }
		}
		public bool HasDrawtype {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _lefttime; // tag 1
		public Int64 lefttime {
			get { return _lefttime; }
			set { base.has_field.set_field (1, true); _lefttime = value; }
		}
		public bool HasLefttime {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _drawnum; // tag 2
		public Int64 drawnum {
			get { return _drawnum; }
			set { base.has_field.set_field (2, true); _drawnum = value; }
		}
		public bool HasDrawnum {
			get { return base.has_field.has_field (2); }
		}

		public drawlist () : base(max_field_count) {}

		public drawlist (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.drawtype = base.deserialize.read_integer ();
					break;
				case 1:
					this.lefttime = base.deserialize.read_integer ();
					break;
				case 2:
					this.drawnum = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.drawtype, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.lefttime, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.drawnum, 2);
			}

			return base.serialize.close ();
		}
	}


	public class drawrewardlist : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _propid; // tag 0
		public Int64 propid {
			get { return _propid; }
			set { base.has_field.set_field (0, true); _propid = value; }
		}
		public bool HasPropid {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _propnum; // tag 1
		public Int64 propnum {
			get { return _propnum; }
			set { base.has_field.set_field (1, true); _propnum = value; }
		}
		public bool HasPropnum {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _proptype; // tag 2
		public Int64 proptype {
			get { return _proptype; }
			set { base.has_field.set_field (2, true); _proptype = value; }
		}
		public bool HasProptype {
			get { return base.has_field.has_field (2); }
		}

		public drawrewardlist () : base(max_field_count) {}

		public drawrewardlist (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.propid = base.deserialize.read_integer ();
					break;
				case 1:
					this.propnum = base.deserialize.read_integer ();
					break;
				case 2:
					this.proptype = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.propid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.propnum, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.proptype, 2);
			}

			return base.serialize.close ();
		}
	}


	public class enemy : SprotoTypeBase {
		private static int max_field_count = 21;
		
		
		private Int64 _csv_id; // tag 0
		public Int64 csv_id {
			get { return _csv_id; }
			set { base.has_field.set_field (0, true); _csv_id = value; }
		}
		public bool HasCsv_id {
			get { return base.has_field.has_field (0); }
		}

		private string _uname; // tag 1
		public string uname {
			get { return _uname; }
			set { base.has_field.set_field (1, true); _uname = value; }
		}
		public bool HasUname {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _avatar; // tag 2
		public Int64 avatar {
			get { return _avatar; }
			set { base.has_field.set_field (2, true); _avatar = value; }
		}
		public bool HasAvatar {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _ara_role_id1; // tag 3
		public Int64 ara_role_id1 {
			get { return _ara_role_id1; }
			set { base.has_field.set_field (3, true); _ara_role_id1 = value; }
		}
		public bool HasAra_role_id1 {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _ara_role_id2; // tag 4
		public Int64 ara_role_id2 {
			get { return _ara_role_id2; }
			set { base.has_field.set_field (4, true); _ara_role_id2 = value; }
		}
		public bool HasAra_role_id2 {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _ara_role_id3; // tag 5
		public Int64 ara_role_id3 {
			get { return _ara_role_id3; }
			set { base.has_field.set_field (5, true); _ara_role_id3 = value; }
		}
		public bool HasAra_role_id3 {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _ara_r1_sum_combat; // tag 6
		public Int64 ara_r1_sum_combat {
			get { return _ara_r1_sum_combat; }
			set { base.has_field.set_field (6, true); _ara_r1_sum_combat = value; }
		}
		public bool HasAra_r1_sum_combat {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _ara_r1_sum_defense; // tag 7
		public Int64 ara_r1_sum_defense {
			get { return _ara_r1_sum_defense; }
			set { base.has_field.set_field (7, true); _ara_r1_sum_defense = value; }
		}
		public bool HasAra_r1_sum_defense {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _ara_r1_sum_critical_hit; // tag 8
		public Int64 ara_r1_sum_critical_hit {
			get { return _ara_r1_sum_critical_hit; }
			set { base.has_field.set_field (8, true); _ara_r1_sum_critical_hit = value; }
		}
		public bool HasAra_r1_sum_critical_hit {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _ara_r1_sum_king; // tag 9
		public Int64 ara_r1_sum_king {
			get { return _ara_r1_sum_king; }
			set { base.has_field.set_field (9, true); _ara_r1_sum_king = value; }
		}
		public bool HasAra_r1_sum_king {
			get { return base.has_field.has_field (9); }
		}

		private List<Int64> _ara_role_id1_kf; // tag 10
		public List<Int64> ara_role_id1_kf {
			get { return _ara_role_id1_kf; }
			set { base.has_field.set_field (10, true); _ara_role_id1_kf = value; }
		}
		public bool HasAra_role_id1_kf {
			get { return base.has_field.has_field (10); }
		}

		private List<Int64> _ara_role_id2_kf; // tag 11
		public List<Int64> ara_role_id2_kf {
			get { return _ara_role_id2_kf; }
			set { base.has_field.set_field (11, true); _ara_role_id2_kf = value; }
		}
		public bool HasAra_role_id2_kf {
			get { return base.has_field.has_field (11); }
		}

		private List<Int64> _ara_role_id3_kf; // tag 12
		public List<Int64> ara_role_id3_kf {
			get { return _ara_role_id3_kf; }
			set { base.has_field.set_field (12, true); _ara_role_id3_kf = value; }
		}
		public bool HasAra_role_id3_kf {
			get { return base.has_field.has_field (12); }
		}

		private Int64 _ara_r2_sum_combat; // tag 13
		public Int64 ara_r2_sum_combat {
			get { return _ara_r2_sum_combat; }
			set { base.has_field.set_field (13, true); _ara_r2_sum_combat = value; }
		}
		public bool HasAra_r2_sum_combat {
			get { return base.has_field.has_field (13); }
		}

		private Int64 _ara_r2_sum_defense; // tag 14
		public Int64 ara_r2_sum_defense {
			get { return _ara_r2_sum_defense; }
			set { base.has_field.set_field (14, true); _ara_r2_sum_defense = value; }
		}
		public bool HasAra_r2_sum_defense {
			get { return base.has_field.has_field (14); }
		}

		private Int64 _ara_r2_sum_critical_hit; // tag 15
		public Int64 ara_r2_sum_critical_hit {
			get { return _ara_r2_sum_critical_hit; }
			set { base.has_field.set_field (15, true); _ara_r2_sum_critical_hit = value; }
		}
		public bool HasAra_r2_sum_critical_hit {
			get { return base.has_field.has_field (15); }
		}

		private Int64 _ara_r2_sum_king; // tag 16
		public Int64 ara_r2_sum_king {
			get { return _ara_r2_sum_king; }
			set { base.has_field.set_field (16, true); _ara_r2_sum_king = value; }
		}
		public bool HasAra_r2_sum_king {
			get { return base.has_field.has_field (16); }
		}

		private Int64 _ara_r3_sum_combat; // tag 17
		public Int64 ara_r3_sum_combat {
			get { return _ara_r3_sum_combat; }
			set { base.has_field.set_field (17, true); _ara_r3_sum_combat = value; }
		}
		public bool HasAra_r3_sum_combat {
			get { return base.has_field.has_field (17); }
		}

		private Int64 _ara_r3_sum_defanse; // tag 18
		public Int64 ara_r3_sum_defanse {
			get { return _ara_r3_sum_defanse; }
			set { base.has_field.set_field (18, true); _ara_r3_sum_defanse = value; }
		}
		public bool HasAra_r3_sum_defanse {
			get { return base.has_field.has_field (18); }
		}

		private Int64 _ara_r3_sum_critical_hit; // tag 19
		public Int64 ara_r3_sum_critical_hit {
			get { return _ara_r3_sum_critical_hit; }
			set { base.has_field.set_field (19, true); _ara_r3_sum_critical_hit = value; }
		}
		public bool HasAra_r3_sum_critical_hit {
			get { return base.has_field.has_field (19); }
		}

		private Int64 _ara_r3_sum_king; // tag 20
		public Int64 ara_r3_sum_king {
			get { return _ara_r3_sum_king; }
			set { base.has_field.set_field (20, true); _ara_r3_sum_king = value; }
		}
		public bool HasAra_r3_sum_king {
			get { return base.has_field.has_field (20); }
		}

		public enemy () : base(max_field_count) {}

		public enemy (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.csv_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.uname = base.deserialize.read_string ();
					break;
				case 2:
					this.avatar = base.deserialize.read_integer ();
					break;
				case 3:
					this.ara_role_id1 = base.deserialize.read_integer ();
					break;
				case 4:
					this.ara_role_id2 = base.deserialize.read_integer ();
					break;
				case 5:
					this.ara_role_id3 = base.deserialize.read_integer ();
					break;
				case 6:
					this.ara_r1_sum_combat = base.deserialize.read_integer ();
					break;
				case 7:
					this.ara_r1_sum_defense = base.deserialize.read_integer ();
					break;
				case 8:
					this.ara_r1_sum_critical_hit = base.deserialize.read_integer ();
					break;
				case 9:
					this.ara_r1_sum_king = base.deserialize.read_integer ();
					break;
				case 10:
					this.ara_role_id1_kf = base.deserialize.read_integer_list ();
					break;
				case 11:
					this.ara_role_id2_kf = base.deserialize.read_integer_list ();
					break;
				case 12:
					this.ara_role_id3_kf = base.deserialize.read_integer_list ();
					break;
				case 13:
					this.ara_r2_sum_combat = base.deserialize.read_integer ();
					break;
				case 14:
					this.ara_r2_sum_defense = base.deserialize.read_integer ();
					break;
				case 15:
					this.ara_r2_sum_critical_hit = base.deserialize.read_integer ();
					break;
				case 16:
					this.ara_r2_sum_king = base.deserialize.read_integer ();
					break;
				case 17:
					this.ara_r3_sum_combat = base.deserialize.read_integer ();
					break;
				case 18:
					this.ara_r3_sum_defanse = base.deserialize.read_integer ();
					break;
				case 19:
					this.ara_r3_sum_critical_hit = base.deserialize.read_integer ();
					break;
				case 20:
					this.ara_r3_sum_king = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.csv_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.uname, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.avatar, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.ara_role_id1, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.ara_role_id2, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.ara_role_id3, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.ara_r1_sum_combat, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.ara_r1_sum_defense, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.ara_r1_sum_critical_hit, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.ara_r1_sum_king, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.ara_role_id1_kf, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.ara_role_id2_kf, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.ara_role_id3_kf, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_integer (this.ara_r2_sum_combat, 13);
			}

			if (base.has_field.has_field (14)) {
				base.serialize.write_integer (this.ara_r2_sum_defense, 14);
			}

			if (base.has_field.has_field (15)) {
				base.serialize.write_integer (this.ara_r2_sum_critical_hit, 15);
			}

			if (base.has_field.has_field (16)) {
				base.serialize.write_integer (this.ara_r2_sum_king, 16);
			}

			if (base.has_field.has_field (17)) {
				base.serialize.write_integer (this.ara_r3_sum_combat, 17);
			}

			if (base.has_field.has_field (18)) {
				base.serialize.write_integer (this.ara_r3_sum_defanse, 18);
			}

			if (base.has_field.has_field (19)) {
				base.serialize.write_integer (this.ara_r3_sum_critical_hit, 19);
			}

			if (base.has_field.has_field (20)) {
				base.serialize.write_integer (this.ara_r3_sum_king, 20);
			}

			return base.serialize.close ();
		}
	}


	public class equipment : SprotoTypeBase {
		private static int max_field_count = 11;
		
		
		private Int64 _csv_id; // tag 0
		public Int64 csv_id {
			get { return _csv_id; }
			set { base.has_field.set_field (0, true); _csv_id = value; }
		}
		public bool HasCsv_id {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _level; // tag 1
		public Int64 level {
			get { return _level; }
			set { base.has_field.set_field (1, true); _level = value; }
		}
		public bool HasLevel {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _combat; // tag 2
		public Int64 combat {
			get { return _combat; }
			set { base.has_field.set_field (2, true); _combat = value; }
		}
		public bool HasCombat {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _defense; // tag 3
		public Int64 defense {
			get { return _defense; }
			set { base.has_field.set_field (3, true); _defense = value; }
		}
		public bool HasDefense {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _critical_hit; // tag 4
		public Int64 critical_hit {
			get { return _critical_hit; }
			set { base.has_field.set_field (4, true); _critical_hit = value; }
		}
		public bool HasCritical_hit {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _king; // tag 5
		public Int64 king {
			get { return _king; }
			set { base.has_field.set_field (5, true); _king = value; }
		}
		public bool HasKing {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _critical_hit_probability; // tag 6
		public Int64 critical_hit_probability {
			get { return _critical_hit_probability; }
			set { base.has_field.set_field (6, true); _critical_hit_probability = value; }
		}
		public bool HasCritical_hit_probability {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _combat_probability; // tag 7
		public Int64 combat_probability {
			get { return _combat_probability; }
			set { base.has_field.set_field (7, true); _combat_probability = value; }
		}
		public bool HasCombat_probability {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _defense_probability; // tag 8
		public Int64 defense_probability {
			get { return _defense_probability; }
			set { base.has_field.set_field (8, true); _defense_probability = value; }
		}
		public bool HasDefense_probability {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _king_probability; // tag 9
		public Int64 king_probability {
			get { return _king_probability; }
			set { base.has_field.set_field (9, true); _king_probability = value; }
		}
		public bool HasKing_probability {
			get { return base.has_field.has_field (9); }
		}

		private Int64 _enhance_success_rate; // tag 10
		public Int64 enhance_success_rate {
			get { return _enhance_success_rate; }
			set { base.has_field.set_field (10, true); _enhance_success_rate = value; }
		}
		public bool HasEnhance_success_rate {
			get { return base.has_field.has_field (10); }
		}

		public equipment () : base(max_field_count) {}

		public equipment (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.csv_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.level = base.deserialize.read_integer ();
					break;
				case 2:
					this.combat = base.deserialize.read_integer ();
					break;
				case 3:
					this.defense = base.deserialize.read_integer ();
					break;
				case 4:
					this.critical_hit = base.deserialize.read_integer ();
					break;
				case 5:
					this.king = base.deserialize.read_integer ();
					break;
				case 6:
					this.critical_hit_probability = base.deserialize.read_integer ();
					break;
				case 7:
					this.combat_probability = base.deserialize.read_integer ();
					break;
				case 8:
					this.defense_probability = base.deserialize.read_integer ();
					break;
				case 9:
					this.king_probability = base.deserialize.read_integer ();
					break;
				case 10:
					this.enhance_success_rate = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.csv_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.level, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.combat, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.defense, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.critical_hit, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.king, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.critical_hit_probability, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.combat_probability, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.defense_probability, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.king_probability, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.enhance_success_rate, 10);
			}

			return base.serialize.close ();
		}
	}


	public class equipment_all {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<equipment> _l; // tag 2
			public List<equipment> l {
				get { return _l; }
				set { base.has_field.set_field (2, true); _l = value; }
			}
			public bool HasL {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.l = base.deserialize.read_obj_list<equipment> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.l, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class equipment_enhance {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _csv_id; // tag 0
			public Int64 csv_id {
				get { return _csv_id; }
				set { base.has_field.set_field (0, true); _csv_id = value; }
			}
			public bool HasCsv_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.csv_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.csv_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private equipment _e; // tag 2
			public equipment e {
				get { return _e; }
				set { base.has_field.set_field (2, true); _e = value; }
			}
			public bool HasE {
				get { return base.has_field.has_field (2); }
			}

			private bool _is_valid; // tag 3
			public bool is_valid {
				get { return _is_valid; }
				set { base.has_field.set_field (3, true); _is_valid = value; }
			}
			public bool HasIs_valid {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _effect; // tag 4
			public Int64 effect {
				get { return _effect; }
				set { base.has_field.set_field (4, true); _effect = value; }
			}
			public bool HasEffect {
				get { return base.has_field.has_field (4); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.e = base.deserialize.read_obj<equipment> ();
						break;
					case 3:
						this.is_valid = base.deserialize.read_boolean ();
						break;
					case 4:
						this.effect = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.e, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_boolean (this.is_valid, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.effect, 4);
				}

				return base.serialize.close ();
			}
		}


	}


	public class exercise {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private bool _ifexercise; // tag 0
			public bool ifexercise {
				get { return _ifexercise; }
				set { base.has_field.set_field (0, true); _ifexercise = value; }
			}
			public bool HasIfexercise {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _lefttime; // tag 1
			public Int64 lefttime {
				get { return _lefttime; }
				set { base.has_field.set_field (1, true); _lefttime = value; }
			}
			public bool HasLefttime {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _exercise_level; // tag 2
			public Int64 exercise_level {
				get { return _exercise_level; }
				set { base.has_field.set_field (2, true); _exercise_level = value; }
			}
			public bool HasExercise_level {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ifexercise = base.deserialize.read_boolean ();
						break;
					case 1:
						this.lefttime = base.deserialize.read_integer ();
						break;
					case 2:
						this.exercise_level = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ifexercise, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.lefttime, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.exercise_level, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class exercise_once {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _daily_type; // tag 0
			public Int64 daily_type {
				get { return _daily_type; }
				set { base.has_field.set_field (0, true); _daily_type = value; }
			}
			public bool HasDaily_type {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _exercise_type; // tag 1
			public Int64 exercise_type {
				get { return _exercise_type; }
				set { base.has_field.set_field (1, true); _exercise_type = value; }
			}
			public bool HasExercise_type {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _exercise_level; // tag 2
			public Int64 exercise_level {
				get { return _exercise_level; }
				set { base.has_field.set_field (2, true); _exercise_level = value; }
			}
			public bool HasExercise_level {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.daily_type = base.deserialize.read_integer ();
						break;
					case 1:
						this.exercise_type = base.deserialize.read_integer ();
						break;
					case 2:
						this.exercise_level = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.daily_type, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.exercise_type, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.exercise_level, 2);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _lefttime; // tag 2
			public Int64 lefttime {
				get { return _lefttime; }
				set { base.has_field.set_field (2, true); _lefttime = value; }
			}
			public bool HasLefttime {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.lefttime = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.lefttime, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class findfriend {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (0, true); _ok = value; }
			}
			public bool HasOk {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _errorcode; // tag 1
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (1, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (1); }
			}

			private string _msg; // tag 2
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (2, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (2); }
			}

			private List<subuser> _friend; // tag 3
			public List<subuser> friend {
				get { return _friend; }
				set { base.has_field.set_field (3, true); _friend = value; }
			}
			public bool HasFriend {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ok = base.deserialize.read_boolean ();
						break;
					case 1:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 2:
						this.msg = base.deserialize.read_string ();
						break;
					case 3:
						this.friend = base.deserialize.read_obj_list<subuser> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ok, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.errorcode, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.msg, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.friend, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class friend_list {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (0, true); _ok = value; }
			}
			public bool HasOk {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _errorcode; // tag 1
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (1, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (1); }
			}

			private string _msg; // tag 2
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (2, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (2); }
			}

			private List<subuser> _friendlist; // tag 3
			public List<subuser> friendlist {
				get { return _friendlist; }
				set { base.has_field.set_field (3, true); _friendlist = value; }
			}
			public bool HasFriendlist {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _today_left_heart; // tag 4
			public Int64 today_left_heart {
				get { return _today_left_heart; }
				set { base.has_field.set_field (4, true); _today_left_heart = value; }
			}
			public bool HasToday_left_heart {
				get { return base.has_field.has_field (4); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ok = base.deserialize.read_boolean ();
						break;
					case 1:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 2:
						this.msg = base.deserialize.read_string ();
						break;
					case 3:
						this.friendlist = base.deserialize.read_obj_list<subuser> ();
						break;
					case 4:
						this.today_left_heart = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ok, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.errorcode, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.msg, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.friendlist, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.today_left_heart, 4);
				}

				return base.serialize.close ();
			}
		}


	}


	public class friendidlist : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _signtime; // tag 0
		public Int64 signtime {
			get { return _signtime; }
			set { base.has_field.set_field (0, true); _signtime = value; }
		}
		public bool HasSigntime {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _friendid; // tag 1
		public Int64 friendid {
			get { return _friendid; }
			set { base.has_field.set_field (1, true); _friendid = value; }
		}
		public bool HasFriendid {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _type; // tag 2
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (2, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (2); }
		}

		public friendidlist () : base(max_field_count) {}

		public friendidlist (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.signtime = base.deserialize.read_integer ();
					break;
				case 1:
					this.friendid = base.deserialize.read_integer ();
					break;
				case 2:
					this.type = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.signtime, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.friendid, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.type, 2);
			}

			return base.serialize.close ();
		}
	}


	public class get_lilian_info {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 11;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _level; // tag 2
			public Int64 level {
				get { return _level; }
				set { base.has_field.set_field (2, true); _level = value; }
			}
			public bool HasLevel {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _phy_power; // tag 3
			public Int64 phy_power {
				get { return _phy_power; }
				set { base.has_field.set_field (3, true); _phy_power = value; }
			}
			public bool HasPhy_power {
				get { return base.has_field.has_field (3); }
			}

			private List<lilian_idlist> _invitation_idlist; // tag 4
			public List<lilian_idlist> invitation_idlist {
				get { return _invitation_idlist; }
				set { base.has_field.set_field (4, true); _invitation_idlist = value; }
			}
			public bool HasInvitation_idlist {
				get { return base.has_field.has_field (4); }
			}

			private List<quanguan_basic_info> _basic_info; // tag 5
			public List<quanguan_basic_info> basic_info {
				get { return _basic_info; }
				set { base.has_field.set_field (5, true); _basic_info = value; }
			}
			public bool HasBasic_info {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _lilian_exp; // tag 6
			public Int64 lilian_exp {
				get { return _lilian_exp; }
				set { base.has_field.set_field (6, true); _lilian_exp = value; }
			}
			public bool HasLilian_exp {
				get { return base.has_field.has_field (6); }
			}

			private List<quanguan_lilian_num> _lilian_num_list; // tag 7
			public List<quanguan_lilian_num> lilian_num_list {
				get { return _lilian_num_list; }
				set { base.has_field.set_field (7, true); _lilian_num_list = value; }
			}
			public bool HasLilian_num_list {
				get { return base.has_field.has_field (7); }
			}

			private Int64 _purch_phy_power_num; // tag 8
			public Int64 purch_phy_power_num {
				get { return _purch_phy_power_num; }
				set { base.has_field.set_field (8, true); _purch_phy_power_num = value; }
			}
			public bool HasPurch_phy_power_num {
				get { return base.has_field.has_field (8); }
			}

			private Int64 _phy_power_left_cd_time; // tag 9
			public Int64 phy_power_left_cd_time {
				get { return _phy_power_left_cd_time; }
				set { base.has_field.set_field (9, true); _phy_power_left_cd_time = value; }
			}
			public bool HasPhy_power_left_cd_time {
				get { return base.has_field.has_field (9); }
			}

			private Int64 _present_phy_power_num; // tag 10
			public Int64 present_phy_power_num {
				get { return _present_phy_power_num; }
				set { base.has_field.set_field (10, true); _present_phy_power_num = value; }
			}
			public bool HasPresent_phy_power_num {
				get { return base.has_field.has_field (10); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.level = base.deserialize.read_integer ();
						break;
					case 3:
						this.phy_power = base.deserialize.read_integer ();
						break;
					case 4:
						this.invitation_idlist = base.deserialize.read_obj_list<lilian_idlist> ();
						break;
					case 5:
						this.basic_info = base.deserialize.read_obj_list<quanguan_basic_info> ();
						break;
					case 6:
						this.lilian_exp = base.deserialize.read_integer ();
						break;
					case 7:
						this.lilian_num_list = base.deserialize.read_obj_list<quanguan_lilian_num> ();
						break;
					case 8:
						this.purch_phy_power_num = base.deserialize.read_integer ();
						break;
					case 9:
						this.phy_power_left_cd_time = base.deserialize.read_integer ();
						break;
					case 10:
						this.present_phy_power_num = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.level, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.phy_power, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_obj (this.invitation_idlist, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_obj (this.basic_info, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.lilian_exp, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_obj (this.lilian_num_list, 7);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_integer (this.purch_phy_power_num, 8);
				}

				if (base.has_field.has_field (9)) {
					base.serialize.write_integer (this.phy_power_left_cd_time, 9);
				}

				if (base.has_field.has_field (10)) {
					base.serialize.write_integer (this.present_phy_power_num, 10);
				}

				return base.serialize.close ();
			}
		}


	}


	public class goods : SprotoTypeBase {
		private static int max_field_count = 7;
		
		
		private Int64 _csv_id; // tag 0
		public Int64 csv_id {
			get { return _csv_id; }
			set { base.has_field.set_field (0, true); _csv_id = value; }
		}
		public bool HasCsv_id {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _currency_type; // tag 1
		public Int64 currency_type {
			get { return _currency_type; }
			set { base.has_field.set_field (1, true); _currency_type = value; }
		}
		public bool HasCurrency_type {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _currency_num; // tag 2
		public Int64 currency_num {
			get { return _currency_num; }
			set { base.has_field.set_field (2, true); _currency_num = value; }
		}
		public bool HasCurrency_num {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _g_prop_csv_id; // tag 3
		public Int64 g_prop_csv_id {
			get { return _g_prop_csv_id; }
			set { base.has_field.set_field (3, true); _g_prop_csv_id = value; }
		}
		public bool HasG_prop_csv_id {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _g_prop_num; // tag 4
		public Int64 g_prop_num {
			get { return _g_prop_num; }
			set { base.has_field.set_field (4, true); _g_prop_num = value; }
		}
		public bool HasG_prop_num {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _inventory; // tag 5
		public Int64 inventory {
			get { return _inventory; }
			set { base.has_field.set_field (5, true); _inventory = value; }
		}
		public bool HasInventory {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _countdown; // tag 6
		public Int64 countdown {
			get { return _countdown; }
			set { base.has_field.set_field (6, true); _countdown = value; }
		}
		public bool HasCountdown {
			get { return base.has_field.has_field (6); }
		}

		public goods () : base(max_field_count) {}

		public goods (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.csv_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.currency_type = base.deserialize.read_integer ();
					break;
				case 2:
					this.currency_num = base.deserialize.read_integer ();
					break;
				case 3:
					this.g_prop_csv_id = base.deserialize.read_integer ();
					break;
				case 4:
					this.g_prop_num = base.deserialize.read_integer ();
					break;
				case 5:
					this.inventory = base.deserialize.read_integer ();
					break;
				case 6:
					this.countdown = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.csv_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.currency_type, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.currency_num, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.g_prop_csv_id, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.g_prop_num, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.inventory, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.countdown, 6);
			}

			return base.serialize.close ();
		}
	}


	public class goodsbuy : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _goods_id; // tag 0
		public Int64 goods_id {
			get { return _goods_id; }
			set { base.has_field.set_field (0, true); _goods_id = value; }
		}
		public bool HasGoods_id {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _goods_num; // tag 1
		public Int64 goods_num {
			get { return _goods_num; }
			set { base.has_field.set_field (1, true); _goods_num = value; }
		}
		public bool HasGoods_num {
			get { return base.has_field.has_field (1); }
		}

		public goodsbuy () : base(max_field_count) {}

		public goodsbuy (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.goods_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.goods_num = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.goods_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.goods_num, 1);
			}

			return base.serialize.close ();
		}
	}


	public class handshake {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class heartlist : SprotoTypeBase {
		private static int max_field_count = 5;
		
		
		private Int64 _signtime; // tag 0
		public Int64 signtime {
			get { return _signtime; }
			set { base.has_field.set_field (0, true); _signtime = value; }
		}
		public bool HasSigntime {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _amount; // tag 1
		public Int64 amount {
			get { return _amount; }
			set { base.has_field.set_field (1, true); _amount = value; }
		}
		public bool HasAmount {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _friendid; // tag 2
		public Int64 friendid {
			get { return _friendid; }
			set { base.has_field.set_field (2, true); _friendid = value; }
		}
		public bool HasFriendid {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _type; // tag 3
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (3, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (3); }
		}

		private string _csendtime; // tag 4
		public string csendtime {
			get { return _csendtime; }
			set { base.has_field.set_field (4, true); _csendtime = value; }
		}
		public bool HasCsendtime {
			get { return base.has_field.has_field (4); }
		}

		public heartlist () : base(max_field_count) {}

		public heartlist (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.signtime = base.deserialize.read_integer ();
					break;
				case 1:
					this.amount = base.deserialize.read_integer ();
					break;
				case 2:
					this.friendid = base.deserialize.read_integer ();
					break;
				case 3:
					this.type = base.deserialize.read_integer ();
					break;
				case 4:
					this.csendtime = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.signtime, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.amount, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.friendid, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.type, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.csendtime, 4);
			}

			return base.serialize.close ();
		}
	}


	public class idlist : SprotoTypeBase {
		private static int max_field_count = 1;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		public idlist () : base(max_field_count) {}

		public idlist (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			return base.serialize.close ();
		}
	}


	public class integral_reward : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _integral; // tag 0
		public Int64 integral {
			get { return _integral; }
			set { base.has_field.set_field (0, true); _integral = value; }
		}
		public bool HasIntegral {
			get { return base.has_field.has_field (0); }
		}

		private bool _collected; // tag 1
		public bool collected {
			get { return _collected; }
			set { base.has_field.set_field (1, true); _collected = value; }
		}
		public bool HasCollected {
			get { return base.has_field.has_field (1); }
		}

		public integral_reward () : base(max_field_count) {}

		public integral_reward (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.integral = base.deserialize.read_integer ();
					break;
				case 1:
					this.collected = base.deserialize.read_boolean ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.integral, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_boolean (this.collected, 1);
			}

			return base.serialize.close ();
		}
	}


	public class kf_list : SprotoTypeBase {
		private static int max_field_count = 1;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		public kf_list () : base(max_field_count) {}

		public kf_list (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			return base.serialize.close ();
		}
	}


	public class kungfu {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private List<kungfu_content> _k_list; // tag 0
			public List<kungfu_content> k_list {
				get { return _k_list; }
				set { base.has_field.set_field (0, true); _k_list = value; }
			}
			public bool HasK_list {
				get { return base.has_field.has_field (0); }
			}

			private List<kungfu_role_list> _role_kid_list; // tag 1
			public List<kungfu_role_list> role_kid_list {
				get { return _role_kid_list; }
				set { base.has_field.set_field (1, true); _role_kid_list = value; }
			}
			public bool HasRole_kid_list {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.k_list = base.deserialize.read_obj_list<kungfu_content> ();
						break;
					case 1:
						this.role_kid_list = base.deserialize.read_obj_list<kungfu_role_list> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.k_list, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.role_kid_list, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class kungfu_chose {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _r_csv_id; // tag 0
			public Int64 r_csv_id {
				get { return _r_csv_id; }
				set { base.has_field.set_field (0, true); _r_csv_id = value; }
			}
			public bool HasR_csv_id {
				get { return base.has_field.has_field (0); }
			}

			private List<kungfu_pos_and_id> _idlist; // tag 1
			public List<kungfu_pos_and_id> idlist {
				get { return _idlist; }
				set { base.has_field.set_field (1, true); _idlist = value; }
			}
			public bool HasIdlist {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.r_csv_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.idlist = base.deserialize.read_obj_list<kungfu_pos_and_id> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.r_csv_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.idlist, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class kungfu_content : SprotoTypeBase {
		private static int max_field_count = 5;
		
		
		private Int64 _csv_id; // tag 1
		public Int64 csv_id {
			get { return _csv_id; }
			set { base.has_field.set_field (0, true); _csv_id = value; }
		}
		public bool HasCsv_id {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _k_level; // tag 2
		public Int64 k_level {
			get { return _k_level; }
			set { base.has_field.set_field (1, true); _k_level = value; }
		}
		public bool HasK_level {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _k_type; // tag 3
		public Int64 k_type {
			get { return _k_type; }
			set { base.has_field.set_field (2, true); _k_type = value; }
		}
		public bool HasK_type {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _k_sp_num; // tag 4
		public Int64 k_sp_num {
			get { return _k_sp_num; }
			set { base.has_field.set_field (3, true); _k_sp_num = value; }
		}
		public bool HasK_sp_num {
			get { return base.has_field.has_field (3); }
		}

		public kungfu_content () : base(max_field_count) {}

		public kungfu_content (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 1:
					this.csv_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.k_level = base.deserialize.read_integer ();
					break;
				case 3:
					this.k_type = base.deserialize.read_integer ();
					break;
				case 4:
					this.k_sp_num = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.csv_id, 1);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.k_level, 2);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.k_type, 3);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.k_sp_num, 4);
			}

			return base.serialize.close ();
		}
	}


	public class kungfu_levelup {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _csv_id; // tag 0
			public Int64 csv_id {
				get { return _csv_id; }
				set { base.has_field.set_field (0, true); _csv_id = value; }
			}
			public bool HasCsv_id {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _k_level; // tag 1
			public Int64 k_level {
				get { return _k_level; }
				set { base.has_field.set_field (1, true); _k_level = value; }
			}
			public bool HasK_level {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _k_type; // tag 2
			public Int64 k_type {
				get { return _k_type; }
				set { base.has_field.set_field (2, true); _k_type = value; }
			}
			public bool HasK_type {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _amount; // tag 3
			public Int64 amount {
				get { return _amount; }
				set { base.has_field.set_field (3, true); _amount = value; }
			}
			public bool HasAmount {
				get { return base.has_field.has_field (3); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.csv_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.k_level = base.deserialize.read_integer ();
						break;
					case 2:
						this.k_type = base.deserialize.read_integer ();
						break;
					case 3:
						this.amount = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.csv_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.k_level, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.k_type, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.amount, 3);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _amount; // tag 2
			public Int64 amount {
				get { return _amount; }
				set { base.has_field.set_field (2, true); _amount = value; }
			}
			public bool HasAmount {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.amount = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.amount, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class kungfu_pos_and_id : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _position; // tag 0
		public Int64 position {
			get { return _position; }
			set { base.has_field.set_field (0, true); _position = value; }
		}
		public bool HasPosition {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _k_csv_id; // tag 1
		public Int64 k_csv_id {
			get { return _k_csv_id; }
			set { base.has_field.set_field (1, true); _k_csv_id = value; }
		}
		public bool HasK_csv_id {
			get { return base.has_field.has_field (1); }
		}

		public kungfu_pos_and_id () : base(max_field_count) {}

		public kungfu_pos_and_id (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.position = base.deserialize.read_integer ();
					break;
				case 1:
					this.k_csv_id = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.position, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.k_csv_id, 1);
			}

			return base.serialize.close ();
		}
	}


	public class kungfu_role_list : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _r_csv_id; // tag 0
		public Int64 r_csv_id {
			get { return _r_csv_id; }
			set { base.has_field.set_field (0, true); _r_csv_id = value; }
		}
		public bool HasR_csv_id {
			get { return base.has_field.has_field (0); }
		}

		private List<kungfu_pos_and_id> _pos_list; // tag 1
		public List<kungfu_pos_and_id> pos_list {
			get { return _pos_list; }
			set { base.has_field.set_field (1, true); _pos_list = value; }
		}
		public bool HasPos_list {
			get { return base.has_field.has_field (1); }
		}

		public kungfu_role_list () : base(max_field_count) {}

		public kungfu_role_list (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.r_csv_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.pos_list = base.deserialize.read_obj_list<kungfu_pos_and_id> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.r_csv_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_obj (this.pos_list, 1);
			}

			return base.serialize.close ();
		}
	}


	public class lilian_get_phy_power {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _phy_power; // tag 2
			public Int64 phy_power {
				get { return _phy_power; }
				set { base.has_field.set_field (2, true); _phy_power = value; }
			}
			public bool HasPhy_power {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _left_cd_time; // tag 3
			public Int64 left_cd_time {
				get { return _left_cd_time; }
				set { base.has_field.set_field (3, true); _left_cd_time = value; }
			}
			public bool HasLeft_cd_time {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.phy_power = base.deserialize.read_integer ();
						break;
					case 3:
						this.left_cd_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.phy_power, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.left_cd_time, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class lilian_get_reward_list {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _quanguan_id; // tag 0
			public Int64 quanguan_id {
				get { return _quanguan_id; }
				set { base.has_field.set_field (0, true); _quanguan_id = value; }
			}
			public bool HasQuanguan_id {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _reward_type; // tag 1
			public Int64 reward_type {
				get { return _reward_type; }
				set { base.has_field.set_field (1, true); _reward_type = value; }
			}
			public bool HasReward_type {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.quanguan_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.reward_type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.quanguan_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.reward_type, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 12;
			
			
			private Int64 _iffinished; // tag 0
			public Int64 iffinished {
				get { return _iffinished; }
				set { base.has_field.set_field (0, true); _iffinished = value; }
			}
			public bool HasIffinished {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _if_trigger_event; // tag 1
			public Int64 if_trigger_event {
				get { return _if_trigger_event; }
				set { base.has_field.set_field (1, true); _if_trigger_event = value; }
			}
			public bool HasIf_trigger_event {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _left_cd_time; // tag 2
			public Int64 left_cd_time {
				get { return _left_cd_time; }
				set { base.has_field.set_field (2, true); _left_cd_time = value; }
			}
			public bool HasLeft_cd_time {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _invitation_id; // tag 3
			public Int64 invitation_id {
				get { return _invitation_id; }
				set { base.has_field.set_field (3, true); _invitation_id = value; }
			}
			public bool HasInvitation_id {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _lilian_level; // tag 4
			public Int64 lilian_level {
				get { return _lilian_level; }
				set { base.has_field.set_field (4, true); _lilian_level = value; }
			}
			public bool HasLilian_level {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _errorcode; // tag 5
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (5, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _if_lilian_reward; // tag 6
			public Int64 if_lilian_reward {
				get { return _if_lilian_reward; }
				set { base.has_field.set_field (6, true); _if_lilian_reward = value; }
			}
			public bool HasIf_lilian_reward {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _if_event_reward; // tag 7
			public Int64 if_event_reward {
				get { return _if_event_reward; }
				set { base.has_field.set_field (7, true); _if_event_reward = value; }
			}
			public bool HasIf_event_reward {
				get { return base.has_field.has_field (7); }
			}

			private Int64 _if_lilian_finished; // tag 8
			public Int64 if_lilian_finished {
				get { return _if_lilian_finished; }
				set { base.has_field.set_field (8, true); _if_lilian_finished = value; }
			}
			public bool HasIf_lilian_finished {
				get { return base.has_field.has_field (8); }
			}

			private Int64 _lilian_exp; // tag 9
			public Int64 lilian_exp {
				get { return _lilian_exp; }
				set { base.has_field.set_field (9, true); _lilian_exp = value; }
			}
			public bool HasLilian_exp {
				get { return base.has_field.has_field (9); }
			}

			private Int64 _eventid; // tag 10
			public Int64 eventid {
				get { return _eventid; }
				set { base.has_field.set_field (10, true); _eventid = value; }
			}
			public bool HasEventid {
				get { return base.has_field.has_field (10); }
			}

			private List<lilian_reward_info> _reward; // tag 11
			public List<lilian_reward_info> reward {
				get { return _reward; }
				set { base.has_field.set_field (11, true); _reward = value; }
			}
			public bool HasReward {
				get { return base.has_field.has_field (11); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.iffinished = base.deserialize.read_integer ();
						break;
					case 1:
						this.if_trigger_event = base.deserialize.read_integer ();
						break;
					case 2:
						this.left_cd_time = base.deserialize.read_integer ();
						break;
					case 3:
						this.invitation_id = base.deserialize.read_integer ();
						break;
					case 4:
						this.lilian_level = base.deserialize.read_integer ();
						break;
					case 5:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 6:
						this.if_lilian_reward = base.deserialize.read_integer ();
						break;
					case 7:
						this.if_event_reward = base.deserialize.read_integer ();
						break;
					case 8:
						this.if_lilian_finished = base.deserialize.read_integer ();
						break;
					case 9:
						this.lilian_exp = base.deserialize.read_integer ();
						break;
					case 10:
						this.eventid = base.deserialize.read_integer ();
						break;
					case 11:
						this.reward = base.deserialize.read_obj_list<lilian_reward_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.iffinished, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.if_trigger_event, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.left_cd_time, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.invitation_id, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.lilian_level, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.errorcode, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.if_lilian_reward, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.if_event_reward, 7);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_integer (this.if_lilian_finished, 8);
				}

				if (base.has_field.has_field (9)) {
					base.serialize.write_integer (this.lilian_exp, 9);
				}

				if (base.has_field.has_field (10)) {
					base.serialize.write_integer (this.eventid, 10);
				}

				if (base.has_field.has_field (11)) {
					base.serialize.write_obj (this.reward, 11);
				}

				return base.serialize.close ();
			}
		}


	}


	public class lilian_idlist : SprotoTypeBase {
		private static int max_field_count = 1;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		public lilian_idlist () : base(max_field_count) {}

		public lilian_idlist (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			return base.serialize.close ();
		}
	}


	public class lilian_inc {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _quanguan_id; // tag 0
			public Int64 quanguan_id {
				get { return _quanguan_id; }
				set { base.has_field.set_field (0, true); _quanguan_id = value; }
			}
			public bool HasQuanguan_id {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _inc_type; // tag 1
			public Int64 inc_type {
				get { return _inc_type; }
				set { base.has_field.set_field (1, true); _inc_type = value; }
			}
			public bool HasInc_type {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.quanguan_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.inc_type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.quanguan_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.inc_type, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 14;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _inc_num; // tag 2
			public Int64 inc_num {
				get { return _inc_num; }
				set { base.has_field.set_field (2, true); _inc_num = value; }
			}
			public bool HasInc_num {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _diamond_num; // tag 3
			public Int64 diamond_num {
				get { return _diamond_num; }
				set { base.has_field.set_field (3, true); _diamond_num = value; }
			}
			public bool HasDiamond_num {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _iffinished; // tag 4
			public Int64 iffinished {
				get { return _iffinished; }
				set { base.has_field.set_field (4, true); _iffinished = value; }
			}
			public bool HasIffinished {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _if_trigger_event; // tag 5
			public Int64 if_trigger_event {
				get { return _if_trigger_event; }
				set { base.has_field.set_field (5, true); _if_trigger_event = value; }
			}
			public bool HasIf_trigger_event {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _left_cd_time; // tag 6
			public Int64 left_cd_time {
				get { return _left_cd_time; }
				set { base.has_field.set_field (6, true); _left_cd_time = value; }
			}
			public bool HasLeft_cd_time {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _invitation_id; // tag 7
			public Int64 invitation_id {
				get { return _invitation_id; }
				set { base.has_field.set_field (7, true); _invitation_id = value; }
			}
			public bool HasInvitation_id {
				get { return base.has_field.has_field (7); }
			}

			private Int64 _lilian_level; // tag 8
			public Int64 lilian_level {
				get { return _lilian_level; }
				set { base.has_field.set_field (8, true); _lilian_level = value; }
			}
			public bool HasLilian_level {
				get { return base.has_field.has_field (8); }
			}

			private Int64 _if_lilian_reward; // tag 9
			public Int64 if_lilian_reward {
				get { return _if_lilian_reward; }
				set { base.has_field.set_field (9, true); _if_lilian_reward = value; }
			}
			public bool HasIf_lilian_reward {
				get { return base.has_field.has_field (9); }
			}

			private Int64 _if_event_reward; // tag 10
			public Int64 if_event_reward {
				get { return _if_event_reward; }
				set { base.has_field.set_field (10, true); _if_event_reward = value; }
			}
			public bool HasIf_event_reward {
				get { return base.has_field.has_field (10); }
			}

			private Int64 _lilian_exp; // tag 11
			public Int64 lilian_exp {
				get { return _lilian_exp; }
				set { base.has_field.set_field (11, true); _lilian_exp = value; }
			}
			public bool HasLilian_exp {
				get { return base.has_field.has_field (11); }
			}

			private Int64 _eventid; // tag 12
			public Int64 eventid {
				get { return _eventid; }
				set { base.has_field.set_field (12, true); _eventid = value; }
			}
			public bool HasEventid {
				get { return base.has_field.has_field (12); }
			}

			private List<lilian_reward_info> _reward; // tag 13
			public List<lilian_reward_info> reward {
				get { return _reward; }
				set { base.has_field.set_field (13, true); _reward = value; }
			}
			public bool HasReward {
				get { return base.has_field.has_field (13); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.inc_num = base.deserialize.read_integer ();
						break;
					case 3:
						this.diamond_num = base.deserialize.read_integer ();
						break;
					case 4:
						this.iffinished = base.deserialize.read_integer ();
						break;
					case 5:
						this.if_trigger_event = base.deserialize.read_integer ();
						break;
					case 6:
						this.left_cd_time = base.deserialize.read_integer ();
						break;
					case 7:
						this.invitation_id = base.deserialize.read_integer ();
						break;
					case 8:
						this.lilian_level = base.deserialize.read_integer ();
						break;
					case 9:
						this.if_lilian_reward = base.deserialize.read_integer ();
						break;
					case 10:
						this.if_event_reward = base.deserialize.read_integer ();
						break;
					case 11:
						this.lilian_exp = base.deserialize.read_integer ();
						break;
					case 12:
						this.eventid = base.deserialize.read_integer ();
						break;
					case 13:
						this.reward = base.deserialize.read_obj_list<lilian_reward_info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.inc_num, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.diamond_num, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.iffinished, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.if_trigger_event, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.left_cd_time, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.invitation_id, 7);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_integer (this.lilian_level, 8);
				}

				if (base.has_field.has_field (9)) {
					base.serialize.write_integer (this.if_lilian_reward, 9);
				}

				if (base.has_field.has_field (10)) {
					base.serialize.write_integer (this.if_event_reward, 10);
				}

				if (base.has_field.has_field (11)) {
					base.serialize.write_integer (this.lilian_exp, 11);
				}

				if (base.has_field.has_field (12)) {
					base.serialize.write_integer (this.eventid, 12);
				}

				if (base.has_field.has_field (13)) {
					base.serialize.write_obj (this.reward, 13);
				}

				return base.serialize.close ();
			}
		}


	}


	public class lilian_purch_phy_power {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _phy_power; // tag 2
			public Int64 phy_power {
				get { return _phy_power; }
				set { base.has_field.set_field (2, true); _phy_power = value; }
			}
			public bool HasPhy_power {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _left_cd_time; // tag 3
			public Int64 left_cd_time {
				get { return _left_cd_time; }
				set { base.has_field.set_field (3, true); _left_cd_time = value; }
			}
			public bool HasLeft_cd_time {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.phy_power = base.deserialize.read_integer ();
						break;
					case 3:
						this.left_cd_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.phy_power, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.left_cd_time, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class lilian_reset_quanguan {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _quanguan_id; // tag 0
			public Int64 quanguan_id {
				get { return _quanguan_id; }
				set { base.has_field.set_field (0, true); _quanguan_id = value; }
			}
			public bool HasQuanguan_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.quanguan_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.quanguan_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _diamond_num; // tag 2
			public Int64 diamond_num {
				get { return _diamond_num; }
				set { base.has_field.set_field (2, true); _diamond_num = value; }
			}
			public bool HasDiamond_num {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.diamond_num = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.diamond_num, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class lilian_reward_info : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _propid; // tag 1
		public Int64 propid {
			get { return _propid; }
			set { base.has_field.set_field (0, true); _propid = value; }
		}
		public bool HasPropid {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _propnum; // tag 2
		public Int64 propnum {
			get { return _propnum; }
			set { base.has_field.set_field (1, true); _propnum = value; }
		}
		public bool HasPropnum {
			get { return base.has_field.has_field (1); }
		}

		public lilian_reward_info () : base(max_field_count) {}

		public lilian_reward_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 1:
					this.propid = base.deserialize.read_integer ();
					break;
				case 2:
					this.propnum = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.propid, 1);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.propnum, 2);
			}

			return base.serialize.close ();
		}
	}


	public class lilian_rewared_list {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _quanguan_id; // tag 0
			public Int64 quanguan_id {
				get { return _quanguan_id; }
				set { base.has_field.set_field (0, true); _quanguan_id = value; }
			}
			public bool HasQuanguan_id {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _rtype; // tag 1
			public Int64 rtype {
				get { return _rtype; }
				set { base.has_field.set_field (1, true); _rtype = value; }
			}
			public bool HasRtype {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.quanguan_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.rtype = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.quanguan_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.rtype, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private List<lilian_reward_info> _reward; // tag 1
			public List<lilian_reward_info> reward {
				get { return _reward; }
				set { base.has_field.set_field (1, true); _reward = value; }
			}
			public bool HasReward {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _invitation_id; // tag 2
			public Int64 invitation_id {
				get { return _invitation_id; }
				set { base.has_field.set_field (2, true); _invitation_id = value; }
			}
			public bool HasInvitation_id {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _left_cd_time; // tag 3
			public Int64 left_cd_time {
				get { return _left_cd_time; }
				set { base.has_field.set_field (3, true); _left_cd_time = value; }
			}
			public bool HasLeft_cd_time {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.reward = base.deserialize.read_obj_list<lilian_reward_info> ();
						break;
					case 2:
						this.invitation_id = base.deserialize.read_integer ();
						break;
					case 3:
						this.left_cd_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.reward, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.invitation_id, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.left_cd_time, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class login {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _account; // tag 0
			public string account {
				get { return _account; }
				set { base.has_field.set_field (0, true); _account = value; }
			}
			public bool HasAccount {
				get { return base.has_field.has_field (0); }
			}

			private string _password; // tag 1
			public string password {
				get { return _password; }
				set { base.has_field.set_field (1, true); _password = value; }
			}
			public bool HasPassword {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.account = base.deserialize.read_string ();
						break;
					case 1:
						this.password = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.account, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.password, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private user _u; // tag 2
			public user u {
				get { return _u; }
				set { base.has_field.set_field (2, true); _u = value; }
			}
			public bool HasU {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.u = base.deserialize.read_obj<user> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.u, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class logout {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class mail : SprotoTypeBase {
		private static int max_field_count = 10;
		
		
		private Int64 _emailid; // tag 0
		public Int64 emailid {
			get { return _emailid; }
			set { base.has_field.set_field (0, true); _emailid = value; }
		}
		public bool HasEmailid {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _type; // tag 1
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (1, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _iconid; // tag 2
		public Int64 iconid {
			get { return _iconid; }
			set { base.has_field.set_field (2, true); _iconid = value; }
		}
		public bool HasIconid {
			get { return base.has_field.has_field (2); }
		}

		private string _acctime; // tag 3
		public string acctime {
			get { return _acctime; }
			set { base.has_field.set_field (3, true); _acctime = value; }
		}
		public bool HasAcctime {
			get { return base.has_field.has_field (3); }
		}

		private bool _isread; // tag 4
		public bool isread {
			get { return _isread; }
			set { base.has_field.set_field (4, true); _isread = value; }
		}
		public bool HasIsread {
			get { return base.has_field.has_field (4); }
		}

		private bool _isreward; // tag 5
		public bool isreward {
			get { return _isreward; }
			set { base.has_field.set_field (5, true); _isreward = value; }
		}
		public bool HasIsreward {
			get { return base.has_field.has_field (5); }
		}

		private string _title; // tag 6
		public string title {
			get { return _title; }
			set { base.has_field.set_field (6, true); _title = value; }
		}
		public bool HasTitle {
			get { return base.has_field.has_field (6); }
		}

		private string _content; // tag 7
		public string content {
			get { return _content; }
			set { base.has_field.set_field (7, true); _content = value; }
		}
		public bool HasContent {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _errorcode; // tag 8
		public Int64 errorcode {
			get { return _errorcode; }
			set { base.has_field.set_field (8, true); _errorcode = value; }
		}
		public bool HasErrorcode {
			get { return base.has_field.has_field (8); }
		}

		private List<attach> _attachs; // tag 9
		public List<attach> attachs {
			get { return _attachs; }
			set { base.has_field.set_field (9, true); _attachs = value; }
		}
		public bool HasAttachs {
			get { return base.has_field.has_field (9); }
		}

		public mail () : base(max_field_count) {}

		public mail (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.emailid = base.deserialize.read_integer ();
					break;
				case 1:
					this.type = base.deserialize.read_integer ();
					break;
				case 2:
					this.iconid = base.deserialize.read_integer ();
					break;
				case 3:
					this.acctime = base.deserialize.read_string ();
					break;
				case 4:
					this.isread = base.deserialize.read_boolean ();
					break;
				case 5:
					this.isreward = base.deserialize.read_boolean ();
					break;
				case 6:
					this.title = base.deserialize.read_string ();
					break;
				case 7:
					this.content = base.deserialize.read_string ();
					break;
				case 8:
					this.errorcode = base.deserialize.read_integer ();
					break;
				case 9:
					this.attachs = base.deserialize.read_obj_list<attach> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.emailid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.type, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.iconid, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.acctime, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_boolean (this.isread, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_boolean (this.isreward, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.title, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_string (this.content, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.errorcode, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_obj (this.attachs, 9);
			}

			return base.serialize.close ();
		}
	}


	public class mail_delete {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<idlist> _mail_id; // tag 0
			public List<idlist> mail_id {
				get { return _mail_id; }
				set { base.has_field.set_field (0, true); _mail_id = value; }
			}
			public bool HasMail_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.mail_id = base.deserialize.read_obj_list<idlist> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.mail_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class mail_getreward {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private List<idlist> _mail_id; // tag 0
			public List<idlist> mail_id {
				get { return _mail_id; }
				set { base.has_field.set_field (0, true); _mail_id = value; }
			}
			public bool HasMail_id {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _type; // tag 1
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (1, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.mail_id = base.deserialize.read_obj_list<idlist> ();
						break;
					case 1:
						this.type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.mail_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.type, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class mail_read {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<idlist> _mail_id; // tag 0
			public List<idlist> mail_id {
				get { return _mail_id; }
				set { base.has_field.set_field (0, true); _mail_id = value; }
			}
			public bool HasMail_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.mail_id = base.deserialize.read_obj_list<idlist> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.mail_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class mails {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<mail> _mail_list; // tag 2
			public List<mail> mail_list {
				get { return _mail_list; }
				set { base.has_field.set_field (2, true); _mail_list = value; }
			}
			public bool HasMail_list {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.mail_list = base.deserialize.read_obj_list<mail> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.mail_list, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class otherfriend_list {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private bool _ok; // tag 0
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (0, true); _ok = value; }
			}
			public bool HasOk {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _errorcode; // tag 1
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (1, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (1); }
			}

			private string _msg; // tag 2
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (2, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (2); }
			}

			private List<subuser> _friendlist; // tag 3
			public List<subuser> friendlist {
				get { return _friendlist; }
				set { base.has_field.set_field (3, true); _friendlist = value; }
			}
			public bool HasFriendlist {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ok = base.deserialize.read_boolean ();
						break;
					case 1:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 2:
						this.msg = base.deserialize.read_string ();
						break;
					case 3:
						this.friendlist = base.deserialize.read_obj_list<subuser> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.ok, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.errorcode, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.msg, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.friendlist, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class package : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _type; // tag 0
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (0, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _session; // tag 1
		public Int64 session {
			get { return _session; }
			set { base.has_field.set_field (1, true); _session = value; }
		}
		public bool HasSession {
			get { return base.has_field.has_field (1); }
		}

		public package () : base(max_field_count) {}

		public package (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.type = base.deserialize.read_integer ();
					break;
				case 1:
					this.session = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.session, 1);
			}

			return base.serialize.close ();
		}
	}


	public class prop : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _csv_id; // tag 0
		public Int64 csv_id {
			get { return _csv_id; }
			set { base.has_field.set_field (0, true); _csv_id = value; }
		}
		public bool HasCsv_id {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _num; // tag 1
		public Int64 num {
			get { return _num; }
			set { base.has_field.set_field (1, true); _num = value; }
		}
		public bool HasNum {
			get { return base.has_field.has_field (1); }
		}

		public prop () : base(max_field_count) {}

		public prop (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.csv_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.num = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.csv_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.num, 1);
			}

			return base.serialize.close ();
		}
	}


	public class props {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<prop> _l; // tag 0
			public List<prop> l {
				get { return _l; }
				set { base.has_field.set_field (0, true); _l = value; }
			}
			public bool HasL {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.l = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.l, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class quanguan_basic_info : SprotoTypeBase {
		private static int max_field_count = 13;
		
		
		private Int64 _quanguan_id; // tag 0
		public Int64 quanguan_id {
			get { return _quanguan_id; }
			set { base.has_field.set_field (0, true); _quanguan_id = value; }
		}
		public bool HasQuanguan_id {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _lilian_num; // tag 1
		public Int64 lilian_num {
			get { return _lilian_num; }
			set { base.has_field.set_field (1, true); _lilian_num = value; }
		}
		public bool HasLilian_num {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _left_cd_time; // tag 2
		public Int64 left_cd_time {
			get { return _left_cd_time; }
			set { base.has_field.set_field (2, true); _left_cd_time = value; }
		}
		public bool HasLeft_cd_time {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _errorcode; // tag 3
		public Int64 errorcode {
			get { return _errorcode; }
			set { base.has_field.set_field (3, true); _errorcode = value; }
		}
		public bool HasErrorcode {
			get { return base.has_field.has_field (3); }
		}

		private string _msg; // tag 4
		public string msg {
			get { return _msg; }
			set { base.has_field.set_field (4, true); _msg = value; }
		}
		public bool HasMsg {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _if_trigger_event; // tag 5
		public Int64 if_trigger_event {
			get { return _if_trigger_event; }
			set { base.has_field.set_field (5, true); _if_trigger_event = value; }
		}
		public bool HasIf_trigger_event {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _invitation_id; // tag 6
		public Int64 invitation_id {
			get { return _invitation_id; }
			set { base.has_field.set_field (6, true); _invitation_id = value; }
		}
		public bool HasInvitation_id {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _iflevel_up; // tag 7
		public Int64 iflevel_up {
			get { return _iflevel_up; }
			set { base.has_field.set_field (7, true); _iflevel_up = value; }
		}
		public bool HasIflevel_up {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _delay_type; // tag 8
		public Int64 delay_type {
			get { return _delay_type; }
			set { base.has_field.set_field (8, true); _delay_type = value; }
		}
		public bool HasDelay_type {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _if_event_reward; // tag 9
		public Int64 if_event_reward {
			get { return _if_event_reward; }
			set { base.has_field.set_field (9, true); _if_event_reward = value; }
		}
		public bool HasIf_event_reward {
			get { return base.has_field.has_field (9); }
		}

		private Int64 _if_lilian_reward; // tag 10
		public Int64 if_lilian_reward {
			get { return _if_lilian_reward; }
			set { base.has_field.set_field (10, true); _if_lilian_reward = value; }
		}
		public bool HasIf_lilian_reward {
			get { return base.has_field.has_field (10); }
		}

		private Int64 _eventid; // tag 11
		public Int64 eventid {
			get { return _eventid; }
			set { base.has_field.set_field (11, true); _eventid = value; }
		}
		public bool HasEventid {
			get { return base.has_field.has_field (11); }
		}

		private List<lilian_reward_info> _reward; // tag 12
		public List<lilian_reward_info> reward {
			get { return _reward; }
			set { base.has_field.set_field (12, true); _reward = value; }
		}
		public bool HasReward {
			get { return base.has_field.has_field (12); }
		}

		public quanguan_basic_info () : base(max_field_count) {}

		public quanguan_basic_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.quanguan_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.lilian_num = base.deserialize.read_integer ();
					break;
				case 2:
					this.left_cd_time = base.deserialize.read_integer ();
					break;
				case 3:
					this.errorcode = base.deserialize.read_integer ();
					break;
				case 4:
					this.msg = base.deserialize.read_string ();
					break;
				case 5:
					this.if_trigger_event = base.deserialize.read_integer ();
					break;
				case 6:
					this.invitation_id = base.deserialize.read_integer ();
					break;
				case 7:
					this.iflevel_up = base.deserialize.read_integer ();
					break;
				case 8:
					this.delay_type = base.deserialize.read_integer ();
					break;
				case 9:
					this.if_event_reward = base.deserialize.read_integer ();
					break;
				case 10:
					this.if_lilian_reward = base.deserialize.read_integer ();
					break;
				case 11:
					this.eventid = base.deserialize.read_integer ();
					break;
				case 12:
					this.reward = base.deserialize.read_obj_list<lilian_reward_info> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.quanguan_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.lilian_num, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.left_cd_time, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.errorcode, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.msg, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.if_trigger_event, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.invitation_id, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.iflevel_up, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.delay_type, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.if_event_reward, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.if_lilian_reward, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.eventid, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_obj (this.reward, 12);
			}

			return base.serialize.close ();
		}
	}


	public class quanguan_lilian_num : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _quanguan_id; // tag 0
		public Int64 quanguan_id {
			get { return _quanguan_id; }
			set { base.has_field.set_field (0, true); _quanguan_id = value; }
		}
		public bool HasQuanguan_id {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _num; // tag 1
		public Int64 num {
			get { return _num; }
			set { base.has_field.set_field (1, true); _num = value; }
		}
		public bool HasNum {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _reset_num; // tag 2
		public Int64 reset_num {
			get { return _reset_num; }
			set { base.has_field.set_field (2, true); _reset_num = value; }
		}
		public bool HasReset_num {
			get { return base.has_field.has_field (2); }
		}

		public quanguan_lilian_num () : base(max_field_count) {}

		public quanguan_lilian_num (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.quanguan_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.num = base.deserialize.read_integer ();
					break;
				case 2:
					this.reset_num = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.quanguan_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.num, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.reset_num, 2);
			}

			return base.serialize.close ();
		}
	}


	public class raffle {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _raffle_type; // tag 0
			public Int64 raffle_type {
				get { return _raffle_type; }
				set { base.has_field.set_field (0, true); _raffle_type = value; }
			}
			public bool HasRaffle_type {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.raffle_type = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.raffle_type, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<prop> _l; // tag 2
			public List<prop> l {
				get { return _l; }
				set { base.has_field.set_field (2, true); _l = value; }
			}
			public bool HasL {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.l = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.l, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class recharge_all {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<recharge_item> _l; // tag 2
			public List<recharge_item> l {
				get { return _l; }
				set { base.has_field.set_field (2, true); _l = value; }
			}
			public bool HasL {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.l = base.deserialize.read_obj_list<recharge_item> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.l, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class recharge_buy : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _csv_id; // tag 0
		public Int64 csv_id {
			get { return _csv_id; }
			set { base.has_field.set_field (0, true); _csv_id = value; }
		}
		public bool HasCsv_id {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _num; // tag 1
		public Int64 num {
			get { return _num; }
			set { base.has_field.set_field (1, true); _num = value; }
		}
		public bool HasNum {
			get { return base.has_field.has_field (1); }
		}

		public recharge_buy () : base(max_field_count) {}

		public recharge_buy (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.csv_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.num = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.csv_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.num, 1);
			}

			return base.serialize.close ();
		}
	}


	public class recharge_item : SprotoTypeBase {
		private static int max_field_count = 7;
		
		
		private Int64 _csv_id; // tag 0
		public Int64 csv_id {
			get { return _csv_id; }
			set { base.has_field.set_field (0, true); _csv_id = value; }
		}
		public bool HasCsv_id {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _icon_id; // tag 1
		public Int64 icon_id {
			get { return _icon_id; }
			set { base.has_field.set_field (1, true); _icon_id = value; }
		}
		public bool HasIcon_id {
			get { return base.has_field.has_field (1); }
		}

		private string _name; // tag 2
		public string name {
			get { return _name; }
			set { base.has_field.set_field (2, true); _name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _diamond; // tag 3
		public Int64 diamond {
			get { return _diamond; }
			set { base.has_field.set_field (3, true); _diamond = value; }
		}
		public bool HasDiamond {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _first; // tag 4
		public Int64 first {
			get { return _first; }
			set { base.has_field.set_field (4, true); _first = value; }
		}
		public bool HasFirst {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _gift; // tag 5
		public Int64 gift {
			get { return _gift; }
			set { base.has_field.set_field (5, true); _gift = value; }
		}
		public bool HasGift {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _rmb; // tag 6
		public Int64 rmb {
			get { return _rmb; }
			set { base.has_field.set_field (6, true); _rmb = value; }
		}
		public bool HasRmb {
			get { return base.has_field.has_field (6); }
		}

		public recharge_item () : base(max_field_count) {}

		public recharge_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.csv_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.icon_id = base.deserialize.read_integer ();
					break;
				case 2:
					this.name = base.deserialize.read_string ();
					break;
				case 3:
					this.diamond = base.deserialize.read_integer ();
					break;
				case 4:
					this.first = base.deserialize.read_integer ();
					break;
				case 5:
					this.gift = base.deserialize.read_integer ();
					break;
				case 6:
					this.rmb = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.csv_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.icon_id, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.name, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.diamond, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.first, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.gift, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.rmb, 6);
			}

			return base.serialize.close ();
		}
	}


	public class recharge_purchase {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<recharge_buy> _g; // tag 0
			public List<recharge_buy> g {
				get { return _g; }
				set { base.has_field.set_field (0, true); _g = value; }
			}
			public bool HasG {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.g = base.deserialize.read_obj_list<recharge_buy> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.g, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private user _u; // tag 2
			public user u {
				get { return _u; }
				set { base.has_field.set_field (2, true); _u = value; }
			}
			public bool HasU {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.u = base.deserialize.read_obj<user> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.u, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class recharge_reward_item : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private string _distribute_dt; // tag 1
		public string distribute_dt {
			get { return _distribute_dt; }
			set { base.has_field.set_field (1, true); _distribute_dt = value; }
		}
		public bool HasDistribute_dt {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _icon_id; // tag 2
		public Int64 icon_id {
			get { return _icon_id; }
			set { base.has_field.set_field (2, true); _icon_id = value; }
		}
		public bool HasIcon_id {
			get { return base.has_field.has_field (2); }
		}

		public recharge_reward_item () : base(max_field_count) {}

		public recharge_reward_item (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.distribute_dt = base.deserialize.read_string ();
					break;
				case 2:
					this.icon_id = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.distribute_dt, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.icon_id, 2);
			}

			return base.serialize.close ();
		}
	}


	public class recharge_vip_reward : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private Int64 _vip; // tag 0
		public Int64 vip {
			get { return _vip; }
			set { base.has_field.set_field (0, true); _vip = value; }
		}
		public bool HasVip {
			get { return base.has_field.has_field (0); }
		}

		private List<prop> _props; // tag 1
		public List<prop> props {
			get { return _props; }
			set { base.has_field.set_field (1, true); _props = value; }
		}
		public bool HasProps {
			get { return base.has_field.has_field (1); }
		}

		private bool _collected; // tag 2
		public bool collected {
			get { return _collected; }
			set { base.has_field.set_field (2, true); _collected = value; }
		}
		public bool HasCollected {
			get { return base.has_field.has_field (2); }
		}

		private bool _purchased; // tag 3
		public bool purchased {
			get { return _purchased; }
			set { base.has_field.set_field (3, true); _purchased = value; }
		}
		public bool HasPurchased {
			get { return base.has_field.has_field (3); }
		}

		public recharge_vip_reward () : base(max_field_count) {}

		public recharge_vip_reward (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.vip = base.deserialize.read_integer ();
					break;
				case 1:
					this.props = base.deserialize.read_obj_list<prop> ();
					break;
				case 2:
					this.collected = base.deserialize.read_boolean ();
					break;
				case 3:
					this.purchased = base.deserialize.read_boolean ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.vip, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_obj (this.props, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_boolean (this.collected, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_boolean (this.purchased, 3);
			}

			return base.serialize.close ();
		}
	}


	public class recharge_vip_reward_all {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<recharge_vip_reward> _reward; // tag 2
			public List<recharge_vip_reward> reward {
				get { return _reward; }
				set { base.has_field.set_field (2, true); _reward = value; }
			}
			public bool HasReward {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.reward = base.deserialize.read_obj_list<recharge_vip_reward> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.reward, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class recharge_vip_reward_collect {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _vip; // tag 0
			public Int64 vip {
				get { return _vip; }
				set { base.has_field.set_field (0, true); _vip = value; }
			}
			public bool HasVip {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.vip = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.vip, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _vip; // tag 2
			public Int64 vip {
				get { return _vip; }
				set { base.has_field.set_field (2, true); _vip = value; }
			}
			public bool HasVip {
				get { return base.has_field.has_field (2); }
			}

			private bool _collected; // tag 3
			public bool collected {
				get { return _collected; }
				set { base.has_field.set_field (3, true); _collected = value; }
			}
			public bool HasCollected {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.vip = base.deserialize.read_integer ();
						break;
					case 3:
						this.collected = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.vip, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_boolean (this.collected, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class recharge_vip_reward_purchase {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _vip; // tag 0
			public Int64 vip {
				get { return _vip; }
				set { base.has_field.set_field (0, true); _vip = value; }
			}
			public bool HasVip {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.vip = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.vip, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<prop> _l; // tag 2
			public List<prop> l {
				get { return _l; }
				set { base.has_field.set_field (2, true); _l = value; }
			}
			public bool HasL {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.l = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.l, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class recvfriend {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<friendidlist> _friendlist; // tag 0
			public List<friendidlist> friendlist {
				get { return _friendlist; }
				set { base.has_field.set_field (0, true); _friendlist = value; }
			}
			public bool HasFriendlist {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.friendlist = base.deserialize.read_obj_list<friendidlist> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.friendlist, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class recvheart {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private List<heartlist> _hl; // tag 0
			public List<heartlist> hl {
				get { return _hl; }
				set { base.has_field.set_field (0, true); _hl = value; }
			}
			public bool HasHl {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _totalamount; // tag 1
			public Int64 totalamount {
				get { return _totalamount; }
				set { base.has_field.set_field (1, true); _totalamount = value; }
			}
			public bool HasTotalamount {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.hl = base.deserialize.read_obj_list<heartlist> ();
						break;
					case 1:
						this.totalamount = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.hl, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.totalamount, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class refusefriend {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<friendidlist> _friendlist; // tag 0
			public List<friendidlist> friendlist {
				get { return _friendlist; }
				set { base.has_field.set_field (0, true); _friendlist = value; }
			}
			public bool HasFriendlist {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.friendlist = base.deserialize.read_obj_list<friendidlist> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.friendlist, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class rnk_reward : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _ranking; // tag 0
		public Int64 ranking {
			get { return _ranking; }
			set { base.has_field.set_field (0, true); _ranking = value; }
		}
		public bool HasRanking {
			get { return base.has_field.has_field (0); }
		}

		private bool _collected; // tag 1
		public bool collected {
			get { return _collected; }
			set { base.has_field.set_field (1, true); _collected = value; }
		}
		public bool HasCollected {
			get { return base.has_field.has_field (1); }
		}

		public rnk_reward () : base(max_field_count) {}

		public rnk_reward (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.ranking = base.deserialize.read_integer ();
					break;
				case 1:
					this.collected = base.deserialize.read_boolean ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.ranking, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_boolean (this.collected, 1);
			}

			return base.serialize.close ();
		}
	}


	public class role : SprotoTypeBase {
		private static int max_field_count = 14;
		
		
		private Int64 _csv_id; // tag 0
		public Int64 csv_id {
			get { return _csv_id; }
			set { base.has_field.set_field (0, true); _csv_id = value; }
		}
		public bool HasCsv_id {
			get { return base.has_field.has_field (0); }
		}

		private bool _is_possessed; // tag 1
		public bool is_possessed {
			get { return _is_possessed; }
			set { base.has_field.set_field (1, true); _is_possessed = value; }
		}
		public bool HasIs_possessed {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _star; // tag 2
		public Int64 star {
			get { return _star; }
			set { base.has_field.set_field (2, true); _star = value; }
		}
		public bool HasStar {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _u_us_prop_num; // tag 3
		public Int64 u_us_prop_num {
			get { return _u_us_prop_num; }
			set { base.has_field.set_field (3, true); _u_us_prop_num = value; }
		}
		public bool HasU_us_prop_num {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _property_id1; // tag 4
		public Int64 property_id1 {
			get { return _property_id1; }
			set { base.has_field.set_field (4, true); _property_id1 = value; }
		}
		public bool HasProperty_id1 {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _value1; // tag 5
		public Int64 value1 {
			get { return _value1; }
			set { base.has_field.set_field (5, true); _value1 = value; }
		}
		public bool HasValue1 {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _property_id2; // tag 6
		public Int64 property_id2 {
			get { return _property_id2; }
			set { base.has_field.set_field (6, true); _property_id2 = value; }
		}
		public bool HasProperty_id2 {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _value2; // tag 7
		public Int64 value2 {
			get { return _value2; }
			set { base.has_field.set_field (7, true); _value2 = value; }
		}
		public bool HasValue2 {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _property_id3; // tag 8
		public Int64 property_id3 {
			get { return _property_id3; }
			set { base.has_field.set_field (8, true); _property_id3 = value; }
		}
		public bool HasProperty_id3 {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _value3; // tag 9
		public Int64 value3 {
			get { return _value3; }
			set { base.has_field.set_field (9, true); _value3 = value; }
		}
		public bool HasValue3 {
			get { return base.has_field.has_field (9); }
		}

		private Int64 _property_id4; // tag 10
		public Int64 property_id4 {
			get { return _property_id4; }
			set { base.has_field.set_field (10, true); _property_id4 = value; }
		}
		public bool HasProperty_id4 {
			get { return base.has_field.has_field (10); }
		}

		private Int64 _value4; // tag 11
		public Int64 value4 {
			get { return _value4; }
			set { base.has_field.set_field (11, true); _value4 = value; }
		}
		public bool HasValue4 {
			get { return base.has_field.has_field (11); }
		}

		private Int64 _property_id5; // tag 12
		public Int64 property_id5 {
			get { return _property_id5; }
			set { base.has_field.set_field (12, true); _property_id5 = value; }
		}
		public bool HasProperty_id5 {
			get { return base.has_field.has_field (12); }
		}

		private Int64 _value5; // tag 13
		public Int64 value5 {
			get { return _value5; }
			set { base.has_field.set_field (13, true); _value5 = value; }
		}
		public bool HasValue5 {
			get { return base.has_field.has_field (13); }
		}

		public role () : base(max_field_count) {}

		public role (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.csv_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.is_possessed = base.deserialize.read_boolean ();
					break;
				case 2:
					this.star = base.deserialize.read_integer ();
					break;
				case 3:
					this.u_us_prop_num = base.deserialize.read_integer ();
					break;
				case 4:
					this.property_id1 = base.deserialize.read_integer ();
					break;
				case 5:
					this.value1 = base.deserialize.read_integer ();
					break;
				case 6:
					this.property_id2 = base.deserialize.read_integer ();
					break;
				case 7:
					this.value2 = base.deserialize.read_integer ();
					break;
				case 8:
					this.property_id3 = base.deserialize.read_integer ();
					break;
				case 9:
					this.value3 = base.deserialize.read_integer ();
					break;
				case 10:
					this.property_id4 = base.deserialize.read_integer ();
					break;
				case 11:
					this.value4 = base.deserialize.read_integer ();
					break;
				case 12:
					this.property_id5 = base.deserialize.read_integer ();
					break;
				case 13:
					this.value5 = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.csv_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_boolean (this.is_possessed, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.star, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.u_us_prop_num, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.property_id1, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.value1, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.property_id2, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.value2, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.property_id3, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.value3, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.property_id4, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.value4, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.property_id5, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_integer (this.value5, 13);
			}

			return base.serialize.close ();
		}
	}


	public class role_all {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 7;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<role> _l; // tag 2
			public List<role> l {
				get { return _l; }
				set { base.has_field.set_field (2, true); _l = value; }
			}
			public bool HasL {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _combat; // tag 3
			public Int64 combat {
				get { return _combat; }
				set { base.has_field.set_field (3, true); _combat = value; }
			}
			public bool HasCombat {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _defense; // tag 4
			public Int64 defense {
				get { return _defense; }
				set { base.has_field.set_field (4, true); _defense = value; }
			}
			public bool HasDefense {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _critical_hit; // tag 5
			public Int64 critical_hit {
				get { return _critical_hit; }
				set { base.has_field.set_field (5, true); _critical_hit = value; }
			}
			public bool HasCritical_hit {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _blessing; // tag 6
			public Int64 blessing {
				get { return _blessing; }
				set { base.has_field.set_field (6, true); _blessing = value; }
			}
			public bool HasBlessing {
				get { return base.has_field.has_field (6); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.l = base.deserialize.read_obj_list<role> ();
						break;
					case 3:
						this.combat = base.deserialize.read_integer ();
						break;
					case 4:
						this.defense = base.deserialize.read_integer ();
						break;
					case 5:
						this.critical_hit = base.deserialize.read_integer ();
						break;
					case 6:
						this.blessing = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.l, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.combat, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.defense, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.critical_hit, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.blessing, 6);
				}

				return base.serialize.close ();
			}
		}


	}


	public class role_battle {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _csv_id; // tag 0
			public Int64 csv_id {
				get { return _csv_id; }
				set { base.has_field.set_field (0, true); _csv_id = value; }
			}
			public bool HasCsv_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.csv_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.csv_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class role_info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _role_id; // tag 0
			public Int64 role_id {
				get { return _role_id; }
				set { base.has_field.set_field (0, true); _role_id = value; }
			}
			public bool HasRole_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.role_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.role_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private role _r; // tag 2
			public role r {
				get { return _r; }
				set { base.has_field.set_field (2, true); _r = value; }
			}
			public bool HasR {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.r = base.deserialize.read_obj<role> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.r, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class role_recruit {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _csv_id; // tag 0
			public Int64 csv_id {
				get { return _csv_id; }
				set { base.has_field.set_field (0, true); _csv_id = value; }
			}
			public bool HasCsv_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.csv_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.csv_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private role _r; // tag 2
			public role r {
				get { return _r; }
				set { base.has_field.set_field (2, true); _r = value; }
			}
			public bool HasR {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.r = base.deserialize.read_obj<role> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.r, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class role_upgrade_star {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _role_csv_id; // tag 0
			public Int64 role_csv_id {
				get { return _role_csv_id; }
				set { base.has_field.set_field (0, true); _role_csv_id = value; }
			}
			public bool HasRole_csv_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.role_csv_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.role_csv_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private role _r; // tag 2
			public role r {
				get { return _r; }
				set { base.has_field.set_field (2, true); _r = value; }
			}
			public bool HasR {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.r = base.deserialize.read_obj<role> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.r, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class sendheart {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private List<heartlist> _hl; // tag 0
			public List<heartlist> hl {
				get { return _hl; }
				set { base.has_field.set_field (0, true); _hl = value; }
			}
			public bool HasHl {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _totalamount; // tag 1
			public Int64 totalamount {
				get { return _totalamount; }
				set { base.has_field.set_field (1, true); _totalamount = value; }
			}
			public bool HasTotalamount {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.hl = base.deserialize.read_obj_list<heartlist> ();
						break;
					case 1:
						this.totalamount = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.hl, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.totalamount, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class shop_all {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<goods> _l; // tag 2
			public List<goods> l {
				get { return _l; }
				set { base.has_field.set_field (2, true); _l = value; }
			}
			public bool HasL {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _goods_refresh_count; // tag 3
			public Int64 goods_refresh_count {
				get { return _goods_refresh_count; }
				set { base.has_field.set_field (3, true); _goods_refresh_count = value; }
			}
			public bool HasGoods_refresh_count {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _store_refresh_count_max; // tag 4
			public Int64 store_refresh_count_max {
				get { return _store_refresh_count_max; }
				set { base.has_field.set_field (4, true); _store_refresh_count_max = value; }
			}
			public bool HasStore_refresh_count_max {
				get { return base.has_field.has_field (4); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.l = base.deserialize.read_obj_list<goods> ();
						break;
					case 3:
						this.goods_refresh_count = base.deserialize.read_integer ();
						break;
					case 4:
						this.store_refresh_count_max = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.l, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.goods_refresh_count, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.store_refresh_count_max, 4);
				}

				return base.serialize.close ();
			}
		}


	}


	public class shop_purchase {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<goodsbuy> _g; // tag 0
			public List<goodsbuy> g {
				get { return _g; }
				set { base.has_field.set_field (0, true); _g = value; }
			}
			public bool HasG {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.g = base.deserialize.read_obj_list<goodsbuy> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.g, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 6;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<prop> _l; // tag 2
			public List<prop> l {
				get { return _l; }
				set { base.has_field.set_field (2, true); _l = value; }
			}
			public bool HasL {
				get { return base.has_field.has_field (2); }
			}

			private List<goods> _ll; // tag 3
			public List<goods> ll {
				get { return _ll; }
				set { base.has_field.set_field (3, true); _ll = value; }
			}
			public bool HasLl {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _goods_refresh_count; // tag 4
			public Int64 goods_refresh_count {
				get { return _goods_refresh_count; }
				set { base.has_field.set_field (4, true); _goods_refresh_count = value; }
			}
			public bool HasGoods_refresh_count {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _store_refresh_count_max; // tag 5
			public Int64 store_refresh_count_max {
				get { return _store_refresh_count_max; }
				set { base.has_field.set_field (5, true); _store_refresh_count_max = value; }
			}
			public bool HasStore_refresh_count_max {
				get { return base.has_field.has_field (5); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.l = base.deserialize.read_obj_list<prop> ();
						break;
					case 3:
						this.ll = base.deserialize.read_obj_list<goods> ();
						break;
					case 4:
						this.goods_refresh_count = base.deserialize.read_integer ();
						break;
					case 5:
						this.store_refresh_count_max = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.l, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.ll, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.goods_refresh_count, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.store_refresh_count_max, 5);
				}

				return base.serialize.close ();
			}
		}


	}


	public class shop_refresh {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _goods_id; // tag 0
			public Int64 goods_id {
				get { return _goods_id; }
				set { base.has_field.set_field (0, true); _goods_id = value; }
			}
			public bool HasGoods_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.goods_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.goods_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private List<goods> _l; // tag 2
			public List<goods> l {
				get { return _l; }
				set { base.has_field.set_field (2, true); _l = value; }
			}
			public bool HasL {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _goods_refresh_count; // tag 3
			public Int64 goods_refresh_count {
				get { return _goods_refresh_count; }
				set { base.has_field.set_field (3, true); _goods_refresh_count = value; }
			}
			public bool HasGoods_refresh_count {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _store_refresh_count_max; // tag 4
			public Int64 store_refresh_count_max {
				get { return _store_refresh_count_max; }
				set { base.has_field.set_field (4, true); _store_refresh_count_max = value; }
			}
			public bool HasStore_refresh_count_max {
				get { return base.has_field.has_field (4); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.l = base.deserialize.read_obj_list<goods> ();
						break;
					case 3:
						this.goods_refresh_count = base.deserialize.read_integer ();
						break;
					case 4:
						this.store_refresh_count_max = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.l, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.goods_refresh_count, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.store_refresh_count_max, 4);
				}

				return base.serialize.close ();
			}
		}


	}


	public class signup {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _account; // tag 0
			public string account {
				get { return _account; }
				set { base.has_field.set_field (0, true); _account = value; }
			}
			public bool HasAccount {
				get { return base.has_field.has_field (0); }
			}

			private string _password; // tag 1
			public string password {
				get { return _password; }
				set { base.has_field.set_field (1, true); _password = value; }
			}
			public bool HasPassword {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.account = base.deserialize.read_string ();
						break;
					case 1:
						this.password = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.account, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.password, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class start_lilian {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _quanguan_id; // tag 0
			public Int64 quanguan_id {
				get { return _quanguan_id; }
				set { base.has_field.set_field (0, true); _quanguan_id = value; }
			}
			public bool HasQuanguan_id {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _invitation_id; // tag 1
			public Int64 invitation_id {
				get { return _invitation_id; }
				set { base.has_field.set_field (1, true); _invitation_id = value; }
			}
			public bool HasInvitation_id {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.quanguan_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.invitation_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.quanguan_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.invitation_id, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _left_cd_time; // tag 2
			public Int64 left_cd_time {
				get { return _left_cd_time; }
				set { base.has_field.set_field (2, true); _left_cd_time = value; }
			}
			public bool HasLeft_cd_time {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.left_cd_time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.left_cd_time, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class subuser : SprotoTypeBase {
		private static int max_field_count = 15;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private string _name; // tag 1
		public string name {
			get { return _name; }
			set { base.has_field.set_field (1, true); _name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _level; // tag 2
		public Int64 level {
			get { return _level; }
			set { base.has_field.set_field (2, true); _level = value; }
		}
		public bool HasLevel {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _viplevel; // tag 3
		public Int64 viplevel {
			get { return _viplevel; }
			set { base.has_field.set_field (3, true); _viplevel = value; }
		}
		public bool HasViplevel {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _iconid; // tag 4
		public Int64 iconid {
			get { return _iconid; }
			set { base.has_field.set_field (4, true); _iconid = value; }
		}
		public bool HasIconid {
			get { return base.has_field.has_field (4); }
		}

		private string _sign; // tag 5
		public string sign {
			get { return _sign; }
			set { base.has_field.set_field (5, true); _sign = value; }
		}
		public bool HasSign {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _fightpower; // tag 6
		public Int64 fightpower {
			get { return _fightpower; }
			set { base.has_field.set_field (6, true); _fightpower = value; }
		}
		public bool HasFightpower {
			get { return base.has_field.has_field (6); }
		}

		private string _uid; // tag 7
		public string uid {
			get { return _uid; }
			set { base.has_field.set_field (7, true); _uid = value; }
		}
		public bool HasUid {
			get { return base.has_field.has_field (7); }
		}

		private string _online_time; // tag 8
		public string online_time {
			get { return _online_time; }
			set { base.has_field.set_field (8, true); _online_time = value; }
		}
		public bool HasOnline_time {
			get { return base.has_field.has_field (8); }
		}

		private bool _heart; // tag 9
		public bool heart {
			get { return _heart; }
			set { base.has_field.set_field (9, true); _heart = value; }
		}
		public bool HasHeart {
			get { return base.has_field.has_field (9); }
		}

		private bool _apply; // tag 10
		public bool apply {
			get { return _apply; }
			set { base.has_field.set_field (10, true); _apply = value; }
		}
		public bool HasApply {
			get { return base.has_field.has_field (10); }
		}

		private bool _receive; // tag 11
		public bool receive {
			get { return _receive; }
			set { base.has_field.set_field (11, true); _receive = value; }
		}
		public bool HasReceive {
			get { return base.has_field.has_field (11); }
		}

		private Int64 _type; // tag 12
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (12, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (12); }
		}

		private Int64 _signtime; // tag 13
		public Int64 signtime {
			get { return _signtime; }
			set { base.has_field.set_field (13, true); _signtime = value; }
		}
		public bool HasSigntime {
			get { return base.has_field.has_field (13); }
		}

		private Int64 _heartamount; // tag 14
		public Int64 heartamount {
			get { return _heartamount; }
			set { base.has_field.set_field (14, true); _heartamount = value; }
		}
		public bool HasHeartamount {
			get { return base.has_field.has_field (14); }
		}

		public subuser () : base(max_field_count) {}

		public subuser (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.name = base.deserialize.read_string ();
					break;
				case 2:
					this.level = base.deserialize.read_integer ();
					break;
				case 3:
					this.viplevel = base.deserialize.read_integer ();
					break;
				case 4:
					this.iconid = base.deserialize.read_integer ();
					break;
				case 5:
					this.sign = base.deserialize.read_string ();
					break;
				case 6:
					this.fightpower = base.deserialize.read_integer ();
					break;
				case 7:
					this.uid = base.deserialize.read_string ();
					break;
				case 8:
					this.online_time = base.deserialize.read_string ();
					break;
				case 9:
					this.heart = base.deserialize.read_boolean ();
					break;
				case 10:
					this.apply = base.deserialize.read_boolean ();
					break;
				case 11:
					this.receive = base.deserialize.read_boolean ();
					break;
				case 12:
					this.type = base.deserialize.read_integer ();
					break;
				case 13:
					this.signtime = base.deserialize.read_integer ();
					break;
				case 14:
					this.heartamount = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.name, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.level, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.viplevel, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.iconid, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.sign, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.fightpower, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_string (this.uid, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_string (this.online_time, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_boolean (this.heart, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_boolean (this.apply, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_boolean (this.receive, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.type, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_integer (this.signtime, 13);
			}

			if (base.has_field.has_field (14)) {
				base.serialize.write_integer (this.heartamount, 14);
			}

			return base.serialize.close ();
		}
	}


	public class suser : SprotoTypeBase {
		private static int max_field_count = 6;
		
		
		private Int64 _uid; // tag 0
		public Int64 uid {
			get { return _uid; }
			set { base.has_field.set_field (0, true); _uid = value; }
		}
		public bool HasUid {
			get { return base.has_field.has_field (0); }
		}

		private string _uname; // tag 1
		public string uname {
			get { return _uname; }
			set { base.has_field.set_field (1, true); _uname = value; }
		}
		public bool HasUname {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _total_combat; // tag 2
		public Int64 total_combat {
			get { return _total_combat; }
			set { base.has_field.set_field (2, true); _total_combat = value; }
		}
		public bool HasTotal_combat {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _ranking; // tag 3
		public Int64 ranking {
			get { return _ranking; }
			set { base.has_field.set_field (3, true); _ranking = value; }
		}
		public bool HasRanking {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _iconid; // tag 4
		public Int64 iconid {
			get { return _iconid; }
			set { base.has_field.set_field (4, true); _iconid = value; }
		}
		public bool HasIconid {
			get { return base.has_field.has_field (4); }
		}

		private bool _worship; // tag 5
		public bool worship {
			get { return _worship; }
			set { base.has_field.set_field (5, true); _worship = value; }
		}
		public bool HasWorship {
			get { return base.has_field.has_field (5); }
		}

		public suser () : base(max_field_count) {}

		public suser (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.uid = base.deserialize.read_integer ();
					break;
				case 1:
					this.uname = base.deserialize.read_string ();
					break;
				case 2:
					this.total_combat = base.deserialize.read_integer ();
					break;
				case 3:
					this.ranking = base.deserialize.read_integer ();
					break;
				case 4:
					this.iconid = base.deserialize.read_integer ();
					break;
				case 5:
					this.worship = base.deserialize.read_boolean ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.uid, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.uname, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.total_combat, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.ranking, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.iconid, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_boolean (this.worship, 5);
			}

			return base.serialize.close ();
		}
	}


	public class use_prop {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _role_id; // tag 0
			public Int64 role_id {
				get { return _role_id; }
				set { base.has_field.set_field (0, true); _role_id = value; }
			}
			public bool HasRole_id {
				get { return base.has_field.has_field (0); }
			}

			private List<prop> _props; // tag 1
			public List<prop> props {
				get { return _props; }
				set { base.has_field.set_field (1, true); _props = value; }
			}
			public bool HasProps {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.role_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.props = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.role_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.props, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private role _r; // tag 2
			public role r {
				get { return _r; }
				set { base.has_field.set_field (2, true); _r = value; }
			}
			public bool HasR {
				get { return base.has_field.has_field (2); }
			}

			private List<prop> _props; // tag 3
			public List<prop> props {
				get { return _props; }
				set { base.has_field.set_field (3, true); _props = value; }
			}
			public bool HasProps {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.r = base.deserialize.read_obj<role> ();
						break;
					case 3:
						this.props = base.deserialize.read_obj_list<prop> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.r, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.props, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class user : SprotoTypeBase {
		private static int max_field_count = 29;
		
		public class response : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private user _user; // tag 2
			public user user {
				get { return _user; }
				set { base.has_field.set_field (2, true); _user = value; }
			}
			public bool HasUser {
				get { return base.has_field.has_field (2); }
			}

			private List<suser> _ara_leaderboards; // tag 3
			public List<suser> ara_leaderboards {
				get { return _ara_leaderboards; }
				set { base.has_field.set_field (3, true); _ara_leaderboards = value; }
			}
			public bool HasAra_leaderboards {
				get { return base.has_field.has_field (3); }
			}

			private List<suser> _ara_rmd_list; // tag 4
			public List<suser> ara_rmd_list {
				get { return _ara_rmd_list; }
				set { base.has_field.set_field (4, true); _ara_rmd_list = value; }
			}
			public bool HasAra_rmd_list {
				get { return base.has_field.has_field (4); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.user = base.deserialize.read_obj<user> ();
						break;
					case 3:
						this.ara_leaderboards = base.deserialize.read_obj_list<suser> ();
						break;
					case 4:
						this.ara_rmd_list = base.deserialize.read_obj_list<suser> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.user, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.ara_leaderboards, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_obj (this.ara_rmd_list, 4);
				}

				return base.serialize.close ();
			}
		}


		
		private string _uname; // tag 0
		public string uname {
			get { return _uname; }
			set { base.has_field.set_field (0, true); _uname = value; }
		}
		public bool HasUname {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _uviplevel; // tag 1
		public Int64 uviplevel {
			get { return _uviplevel; }
			set { base.has_field.set_field (1, true); _uviplevel = value; }
		}
		public bool HasUviplevel {
			get { return base.has_field.has_field (1); }
		}

		private bool _config_sound; // tag 2
		public bool config_sound {
			get { return _config_sound; }
			set { base.has_field.set_field (2, true); _config_sound = value; }
		}
		public bool HasConfig_sound {
			get { return base.has_field.has_field (2); }
		}

		private bool _config_music; // tag 3
		public bool config_music {
			get { return _config_music; }
			set { base.has_field.set_field (3, true); _config_music = value; }
		}
		public bool HasConfig_music {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _avatar; // tag 4
		public Int64 avatar {
			get { return _avatar; }
			set { base.has_field.set_field (4, true); _avatar = value; }
		}
		public bool HasAvatar {
			get { return base.has_field.has_field (4); }
		}

		private string _sign; // tag 5
		public string sign {
			get { return _sign; }
			set { base.has_field.set_field (5, true); _sign = value; }
		}
		public bool HasSign {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _c_role_id; // tag 6
		public Int64 c_role_id {
			get { return _c_role_id; }
			set { base.has_field.set_field (6, true); _c_role_id = value; }
		}
		public bool HasC_role_id {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _level; // tag 7
		public Int64 level {
			get { return _level; }
			set { base.has_field.set_field (7, true); _level = value; }
		}
		public bool HasLevel {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _recharge_rmb; // tag 8
		public Int64 recharge_rmb {
			get { return _recharge_rmb; }
			set { base.has_field.set_field (8, true); _recharge_rmb = value; }
		}
		public bool HasRecharge_rmb {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _recharge_diamond; // tag 9
		public Int64 recharge_diamond {
			get { return _recharge_diamond; }
			set { base.has_field.set_field (9, true); _recharge_diamond = value; }
		}
		public bool HasRecharge_diamond {
			get { return base.has_field.has_field (9); }
		}

		private Int64 _uvip_progress; // tag 10
		public Int64 uvip_progress {
			get { return _uvip_progress; }
			set { base.has_field.set_field (10, true); _uvip_progress = value; }
		}
		public bool HasUvip_progress {
			get { return base.has_field.has_field (10); }
		}

		private Int64 _cp_hanging_id; // tag 11
		public Int64 cp_hanging_id {
			get { return _cp_hanging_id; }
			set { base.has_field.set_field (11, true); _cp_hanging_id = value; }
		}
		public bool HasCp_hanging_id {
			get { return base.has_field.has_field (11); }
		}

		private Int64 _uexp; // tag 12
		public Int64 uexp {
			get { return _uexp; }
			set { base.has_field.set_field (12, true); _uexp = value; }
		}
		public bool HasUexp {
			get { return base.has_field.has_field (12); }
		}

		private Int64 _gold; // tag 13
		public Int64 gold {
			get { return _gold; }
			set { base.has_field.set_field (13, true); _gold = value; }
		}
		public bool HasGold {
			get { return base.has_field.has_field (13); }
		}

		private Int64 _diamond; // tag 14
		public Int64 diamond {
			get { return _diamond; }
			set { base.has_field.set_field (14, true); _diamond = value; }
		}
		public bool HasDiamond {
			get { return base.has_field.has_field (14); }
		}

		private Int64 _love; // tag 15
		public Int64 love {
			get { return _love; }
			set { base.has_field.set_field (15, true); _love = value; }
		}
		public bool HasLove {
			get { return base.has_field.has_field (15); }
		}

		private List<equipment> _equipment_list; // tag 16
		public List<equipment> equipment_list {
			get { return _equipment_list; }
			set { base.has_field.set_field (16, true); _equipment_list = value; }
		}
		public bool HasEquipment_list {
			get { return base.has_field.has_field (16); }
		}

		private List<kungfu_content> _kungfu_list; // tag 17
		public List<kungfu_content> kungfu_list {
			get { return _kungfu_list; }
			set { base.has_field.set_field (17, true); _kungfu_list = value; }
		}
		public bool HasKungfu_list {
			get { return base.has_field.has_field (17); }
		}

		private List<role> _rolelist; // tag 18
		public List<role> rolelist {
			get { return _rolelist; }
			set { base.has_field.set_field (18, true); _rolelist = value; }
		}
		public bool HasRolelist {
			get { return base.has_field.has_field (18); }
		}

		private Int64 _cp_chapter; // tag 19
		public Int64 cp_chapter {
			get { return _cp_chapter; }
			set { base.has_field.set_field (19, true); _cp_chapter = value; }
		}
		public bool HasCp_chapter {
			get { return base.has_field.has_field (19); }
		}

		private Int64 _lilian_level; // tag 20
		public Int64 lilian_level {
			get { return _lilian_level; }
			set { base.has_field.set_field (20, true); _lilian_level = value; }
		}
		public bool HasLilian_level {
			get { return base.has_field.has_field (20); }
		}

		private Int64 _ara_rnk; // tag 21
		public Int64 ara_rnk {
			get { return _ara_rnk; }
			set { base.has_field.set_field (21, true); _ara_rnk = value; }
		}
		public bool HasAra_rnk {
			get { return base.has_field.has_field (21); }
		}

		private Int64 _ara_role_id1; // tag 22
		public Int64 ara_role_id1 {
			get { return _ara_role_id1; }
			set { base.has_field.set_field (22, true); _ara_role_id1 = value; }
		}
		public bool HasAra_role_id1 {
			get { return base.has_field.has_field (22); }
		}

		private Int64 _ara_role_id2; // tag 23
		public Int64 ara_role_id2 {
			get { return _ara_role_id2; }
			set { base.has_field.set_field (23, true); _ara_role_id2 = value; }
		}
		public bool HasAra_role_id2 {
			get { return base.has_field.has_field (23); }
		}

		private Int64 _ara_role_id3; // tag 24
		public Int64 ara_role_id3 {
			get { return _ara_role_id3; }
			set { base.has_field.set_field (24, true); _ara_role_id3 = value; }
		}
		public bool HasAra_role_id3 {
			get { return base.has_field.has_field (24); }
		}

		private Int64 _sum_combat; // tag 25
		public Int64 sum_combat {
			get { return _sum_combat; }
			set { base.has_field.set_field (25, true); _sum_combat = value; }
		}
		public bool HasSum_combat {
			get { return base.has_field.has_field (25); }
		}

		private Int64 _sum_defense; // tag 26
		public Int64 sum_defense {
			get { return _sum_defense; }
			set { base.has_field.set_field (26, true); _sum_defense = value; }
		}
		public bool HasSum_defense {
			get { return base.has_field.has_field (26); }
		}

		private Int64 _sum_critical_hit; // tag 27
		public Int64 sum_critical_hit {
			get { return _sum_critical_hit; }
			set { base.has_field.set_field (27, true); _sum_critical_hit = value; }
		}
		public bool HasSum_critical_hit {
			get { return base.has_field.has_field (27); }
		}

		private Int64 _sum_king; // tag 28
		public Int64 sum_king {
			get { return _sum_king; }
			set { base.has_field.set_field (28, true); _sum_king = value; }
		}
		public bool HasSum_king {
			get { return base.has_field.has_field (28); }
		}

		public user () : base(max_field_count) {}

		public user (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.uname = base.deserialize.read_string ();
					break;
				case 1:
					this.uviplevel = base.deserialize.read_integer ();
					break;
				case 2:
					this.config_sound = base.deserialize.read_boolean ();
					break;
				case 3:
					this.config_music = base.deserialize.read_boolean ();
					break;
				case 4:
					this.avatar = base.deserialize.read_integer ();
					break;
				case 5:
					this.sign = base.deserialize.read_string ();
					break;
				case 6:
					this.c_role_id = base.deserialize.read_integer ();
					break;
				case 7:
					this.level = base.deserialize.read_integer ();
					break;
				case 8:
					this.recharge_rmb = base.deserialize.read_integer ();
					break;
				case 9:
					this.recharge_diamond = base.deserialize.read_integer ();
					break;
				case 10:
					this.uvip_progress = base.deserialize.read_integer ();
					break;
				case 11:
					this.cp_hanging_id = base.deserialize.read_integer ();
					break;
				case 12:
					this.uexp = base.deserialize.read_integer ();
					break;
				case 13:
					this.gold = base.deserialize.read_integer ();
					break;
				case 14:
					this.diamond = base.deserialize.read_integer ();
					break;
				case 15:
					this.love = base.deserialize.read_integer ();
					break;
				case 16:
					this.equipment_list = base.deserialize.read_obj_list<equipment> ();
					break;
				case 17:
					this.kungfu_list = base.deserialize.read_obj_list<kungfu_content> ();
					break;
				case 18:
					this.rolelist = base.deserialize.read_obj_list<role> ();
					break;
				case 19:
					this.cp_chapter = base.deserialize.read_integer ();
					break;
				case 20:
					this.lilian_level = base.deserialize.read_integer ();
					break;
				case 21:
					this.ara_rnk = base.deserialize.read_integer ();
					break;
				case 22:
					this.ara_role_id1 = base.deserialize.read_integer ();
					break;
				case 23:
					this.ara_role_id2 = base.deserialize.read_integer ();
					break;
				case 24:
					this.ara_role_id3 = base.deserialize.read_integer ();
					break;
				case 25:
					this.sum_combat = base.deserialize.read_integer ();
					break;
				case 26:
					this.sum_defense = base.deserialize.read_integer ();
					break;
				case 27:
					this.sum_critical_hit = base.deserialize.read_integer ();
					break;
				case 28:
					this.sum_king = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.uname, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.uviplevel, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_boolean (this.config_sound, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_boolean (this.config_music, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.avatar, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.sign, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.c_role_id, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.level, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.recharge_rmb, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.recharge_diamond, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.uvip_progress, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.cp_hanging_id, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.uexp, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_integer (this.gold, 13);
			}

			if (base.has_field.has_field (14)) {
				base.serialize.write_integer (this.diamond, 14);
			}

			if (base.has_field.has_field (15)) {
				base.serialize.write_integer (this.love, 15);
			}

			if (base.has_field.has_field (16)) {
				base.serialize.write_obj (this.equipment_list, 16);
			}

			if (base.has_field.has_field (17)) {
				base.serialize.write_obj (this.kungfu_list, 17);
			}

			if (base.has_field.has_field (18)) {
				base.serialize.write_obj (this.rolelist, 18);
			}

			if (base.has_field.has_field (19)) {
				base.serialize.write_integer (this.cp_chapter, 19);
			}

			if (base.has_field.has_field (20)) {
				base.serialize.write_integer (this.lilian_level, 20);
			}

			if (base.has_field.has_field (21)) {
				base.serialize.write_integer (this.ara_rnk, 21);
			}

			if (base.has_field.has_field (22)) {
				base.serialize.write_integer (this.ara_role_id1, 22);
			}

			if (base.has_field.has_field (23)) {
				base.serialize.write_integer (this.ara_role_id2, 23);
			}

			if (base.has_field.has_field (24)) {
				base.serialize.write_integer (this.ara_role_id3, 24);
			}

			if (base.has_field.has_field (25)) {
				base.serialize.write_integer (this.sum_combat, 25);
			}

			if (base.has_field.has_field (26)) {
				base.serialize.write_integer (this.sum_defense, 26);
			}

			if (base.has_field.has_field (27)) {
				base.serialize.write_integer (this.sum_critical_hit, 27);
			}

			if (base.has_field.has_field (28)) {
				base.serialize.write_integer (this.sum_king, 28);
			}

			return base.serialize.close ();
		}
	}


	public class user_can_modify_name {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class user_modify_name {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _name; // tag 0
			public string name {
				get { return _name; }
				set { base.has_field.set_field (0, true); _name = value; }
			}
			public bool HasName {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.name = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.name, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class user_random_name {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private string _name; // tag 2
			public string name {
				get { return _name; }
				set { base.has_field.set_field (2, true); _name = value; }
			}
			public bool HasName {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.name = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.name, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class user_sign {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private string _sign; // tag 0
			public string sign {
				get { return _sign; }
				set { base.has_field.set_field (0, true); _sign = value; }
			}
			public bool HasSign {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.sign = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.sign, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class user_upgrade {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class wake {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _role_id; // tag 0
			public Int64 role_id {
				get { return _role_id; }
				set { base.has_field.set_field (0, true); _role_id = value; }
			}
			public bool HasRole_id {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.role_id = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.role_id, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private role _r; // tag 2
			public role r {
				get { return _r; }
				set { base.has_field.set_field (2, true); _r = value; }
			}
			public bool HasR {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.r = base.deserialize.read_obj<role> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.r, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class xilian {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 6;
			
			
			private Int64 _role_id; // tag 0
			public Int64 role_id {
				get { return _role_id; }
				set { base.has_field.set_field (0, true); _role_id = value; }
			}
			public bool HasRole_id {
				get { return base.has_field.has_field (0); }
			}

			private bool _is_locked1; // tag 1
			public bool is_locked1 {
				get { return _is_locked1; }
				set { base.has_field.set_field (1, true); _is_locked1 = value; }
			}
			public bool HasIs_locked1 {
				get { return base.has_field.has_field (1); }
			}

			private bool _is_locked2; // tag 2
			public bool is_locked2 {
				get { return _is_locked2; }
				set { base.has_field.set_field (2, true); _is_locked2 = value; }
			}
			public bool HasIs_locked2 {
				get { return base.has_field.has_field (2); }
			}

			private bool _is_locked3; // tag 3
			public bool is_locked3 {
				get { return _is_locked3; }
				set { base.has_field.set_field (3, true); _is_locked3 = value; }
			}
			public bool HasIs_locked3 {
				get { return base.has_field.has_field (3); }
			}

			private bool _is_locked4; // tag 4
			public bool is_locked4 {
				get { return _is_locked4; }
				set { base.has_field.set_field (4, true); _is_locked4 = value; }
			}
			public bool HasIs_locked4 {
				get { return base.has_field.has_field (4); }
			}

			private bool _is_locked5; // tag 5
			public bool is_locked5 {
				get { return _is_locked5; }
				set { base.has_field.set_field (5, true); _is_locked5 = value; }
			}
			public bool HasIs_locked5 {
				get { return base.has_field.has_field (5); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.role_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.is_locked1 = base.deserialize.read_boolean ();
						break;
					case 2:
						this.is_locked2 = base.deserialize.read_boolean ();
						break;
					case 3:
						this.is_locked3 = base.deserialize.read_boolean ();
						break;
					case 4:
						this.is_locked4 = base.deserialize.read_boolean ();
						break;
					case 5:
						this.is_locked5 = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.role_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_boolean (this.is_locked1, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_boolean (this.is_locked2, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_boolean (this.is_locked3, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_boolean (this.is_locked4, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_boolean (this.is_locked5, 5);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 12;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _property_id1; // tag 2
			public Int64 property_id1 {
				get { return _property_id1; }
				set { base.has_field.set_field (2, true); _property_id1 = value; }
			}
			public bool HasProperty_id1 {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _value1; // tag 3
			public Int64 value1 {
				get { return _value1; }
				set { base.has_field.set_field (3, true); _value1 = value; }
			}
			public bool HasValue1 {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _property_id2; // tag 4
			public Int64 property_id2 {
				get { return _property_id2; }
				set { base.has_field.set_field (4, true); _property_id2 = value; }
			}
			public bool HasProperty_id2 {
				get { return base.has_field.has_field (4); }
			}

			private Int64 _value2; // tag 5
			public Int64 value2 {
				get { return _value2; }
				set { base.has_field.set_field (5, true); _value2 = value; }
			}
			public bool HasValue2 {
				get { return base.has_field.has_field (5); }
			}

			private Int64 _property_id3; // tag 6
			public Int64 property_id3 {
				get { return _property_id3; }
				set { base.has_field.set_field (6, true); _property_id3 = value; }
			}
			public bool HasProperty_id3 {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _value3; // tag 7
			public Int64 value3 {
				get { return _value3; }
				set { base.has_field.set_field (7, true); _value3 = value; }
			}
			public bool HasValue3 {
				get { return base.has_field.has_field (7); }
			}

			private Int64 _property_id4; // tag 8
			public Int64 property_id4 {
				get { return _property_id4; }
				set { base.has_field.set_field (8, true); _property_id4 = value; }
			}
			public bool HasProperty_id4 {
				get { return base.has_field.has_field (8); }
			}

			private Int64 _value4; // tag 9
			public Int64 value4 {
				get { return _value4; }
				set { base.has_field.set_field (9, true); _value4 = value; }
			}
			public bool HasValue4 {
				get { return base.has_field.has_field (9); }
			}

			private Int64 _property_id5; // tag 10
			public Int64 property_id5 {
				get { return _property_id5; }
				set { base.has_field.set_field (10, true); _property_id5 = value; }
			}
			public bool HasProperty_id5 {
				get { return base.has_field.has_field (10); }
			}

			private Int64 _value5; // tag 11
			public Int64 value5 {
				get { return _value5; }
				set { base.has_field.set_field (11, true); _value5 = value; }
			}
			public bool HasValue5 {
				get { return base.has_field.has_field (11); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					case 2:
						this.property_id1 = base.deserialize.read_integer ();
						break;
					case 3:
						this.value1 = base.deserialize.read_integer ();
						break;
					case 4:
						this.property_id2 = base.deserialize.read_integer ();
						break;
					case 5:
						this.value2 = base.deserialize.read_integer ();
						break;
					case 6:
						this.property_id3 = base.deserialize.read_integer ();
						break;
					case 7:
						this.value3 = base.deserialize.read_integer ();
						break;
					case 8:
						this.property_id4 = base.deserialize.read_integer ();
						break;
					case 9:
						this.value4 = base.deserialize.read_integer ();
						break;
					case 10:
						this.property_id5 = base.deserialize.read_integer ();
						break;
					case 11:
						this.value5 = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.property_id1, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.value1, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.property_id2, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_integer (this.value2, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_integer (this.property_id3, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.value3, 7);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_integer (this.property_id4, 8);
				}

				if (base.has_field.has_field (9)) {
					base.serialize.write_integer (this.value4, 9);
				}

				if (base.has_field.has_field (10)) {
					base.serialize.write_integer (this.property_id5, 10);
				}

				if (base.has_field.has_field (11)) {
					base.serialize.write_integer (this.value5, 11);
				}

				return base.serialize.close ();
			}
		}


	}


	public class xilian_ok {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _role_id; // tag 0
			public Int64 role_id {
				get { return _role_id; }
				set { base.has_field.set_field (0, true); _role_id = value; }
			}
			public bool HasRole_id {
				get { return base.has_field.has_field (0); }
			}

			private bool _ok; // tag 1
			public bool ok {
				get { return _ok; }
				set { base.has_field.set_field (1, true); _ok = value; }
			}
			public bool HasOk {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.role_id = base.deserialize.read_integer ();
						break;
					case 1:
						this.ok = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.role_id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_boolean (this.ok, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _errorcode; // tag 0
			public Int64 errorcode {
				get { return _errorcode; }
				set { base.has_field.set_field (0, true); _errorcode = value; }
			}
			public bool HasErrorcode {
				get { return base.has_field.has_field (0); }
			}

			private string _msg; // tag 1
			public string msg {
				get { return _msg; }
				set { base.has_field.set_field (1, true); _msg = value; }
			}
			public bool HasMsg {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.errorcode = base.deserialize.read_integer ();
						break;
					case 1:
						this.msg = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.errorcode, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.msg, 1);
				}

				return base.serialize.close ();
			}
		}


	}


}

